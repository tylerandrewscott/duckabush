GrantsHomework <- function(runs=10000,days=365,minclass=2,maxclass=50)#
 {#
 bysizeresults<-rep(0,(maxclass+1-minclass))	#
 for (k in minclass:maxclass)#
 {	#
 runresults<-rep(0,runs)#
 classize=k#
 for (i in 1:runs)#
 {#
	 people<-rep(0,classize)#
	 for (j in 1:classize)#
	{#
		 #people[j]<-round(runif(1,0,days),0)#
		 people[j]<-sample(seq(1,365,1),1,replace=TRUE)#
	}#
	count_bdays<-data.frame(table(people))#
	runresults[i]<-ifelse(sum(ifelse(count_bdays$Freq>1,1,0))>1,1,0)#
}#
bysizeresults[k]<-(sum(runresults)/runs)#
}#
return(data.frame(cbind(bysizeresults[-1],seq(minclass,maxclass,1))))#
}
GrantsAnswer<-GrantsHomework(runs=100,days=365,minclass=2,maxclass=50)
ggplot(GrantsAnswer,aes(x=GrantsAnswer[,2],y=GrantsAnswer[,1]))+geom_line()
GrantsAnswer<-GrantsHomework(runs=1000,days=365,minclass=2,maxclass=50)
GrantsHomework <- function(runs=10000,days=365,minclass=2,maxclass=50)#
 {#
 bysizeresults<-rep(0,(maxclass+1-minclass))	#
 for (k in minclass:maxclass)#
 {	#
 runresults<-rep(0,runs)#
 classize=k#
 for (i in 1:runs)#
 {#
	 people<-rep(0,classize)#
	 for (j in 1:classize)#
	{#
		 people[j]<-round(runif(1,.5,days+.5),0)#
		 #people[j]<-sample(seq(1,365,1),1,replace=TRUE)#
	}#
	count_bdays<-data.frame(table(people))#
	runresults[i]<-ifelse(sum(ifelse(count_bdays$Freq>1,1,0))>1,1,0)#
}#
bysizeresults[k]<-(sum(runresults)/runs)#
}#
return(data.frame(cbind(bysizeresults[-1],seq(minclass,maxclass,1))))#
}
GrantsAnswer<-GrantsHomework(runs=1000,days=365,minclass=2,maxclass=50)
ggplot(GrantsAnswer,aes(x=GrantsAnswer[,2],y=GrantsAnswer[,1]))+geom_line()
exp(-0.019)
exp(-0.507)
exp(.455)
exp(0.571)
2+2
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+0#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=0,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)
length(unique(fdat$HUC4))
fdat$HUC4
length(unique(fdat$HUC4))
table(fdat$HUC4)
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)
table(fdat$HUC4)
table(fdat$HUC4)>2
length(table(fdat$HUC4)>2)
lenth(unique(fdat$HUC4))
gdat<-read.csv("//Users/TScott/Google Drive/Dosewallips/CRRC.csv")#
#CODE FOR STATE VARIABLE#
gdat$STATE<-rep(0,nrow(gdat))#
gdat$STATE[grep("CT",as.character(gdat$Geography))]<-"CT"#
gdat$STATE[grep("NV",as.character(gdat$Geography))]<-"NV"#
gdat$STATE[grep("OR",as.character(gdat$Geography))]<-"OR"#
gdat$STATE[grep("HI",as.character(gdat$Geography))]<-"HI"#
gdat$STATE[grep("WA",as.character(gdat$Geography))]<-"WA"#
gdat$STATE[grep("AK",as.character(gdat$Geography))]<-"AK"#
gdat$STATE[grep("CA",as.character(gdat$Geography))]<-"CA"#
gdat$STATE[grep("VA",as.character(gdat$Geography))]<-"VA"#
gdat$STATE[grep("SC",as.character(gdat$Geography))]<-"SC"#
gdat$STATE[grep("NC",as.character(gdat$Geography))]<-"NC"#
gdat$STATE[grep("TX",as.character(gdat$Geography))]<-"TX"#
gdat$STATE[grep("MD",as.character(gdat$Geography))]<-"MD"#
gdat$STATE[grep("LA",as.character(gdat$Geography))]<-"LA"#
gdat$STATE[grep("GA",as.character(gdat$Geography))]<-"GA"#
gdat$STATE[grep("FL",as.character(gdat$Geography))]<-"FL"#
gdat$STATE[grep("DE",as.character(gdat$Geography))]<-"DE"#
gdat$STATE[grep("AL",as.character(gdat$Geography))]<-"AL"#
gdat$STATE[grep("RI",as.character(gdat$Geography))]<-"RI"#
gdat$STATE[grep("DC",as.character(gdat$Geography))]<-"DC"#
gdat$STATE[grep("NY",as.character(gdat$Geography))]<-"NY"#
gdat$STATE[grep("NJ",as.character(gdat$Geography))]<-"NJ"#
gdat$STATE[grep("NH",as.character(gdat$Geography))]<-"NH"#
gdat$STATE[grep("ME",as.character(gdat$Geography))]<-"ME"#
gdat$STATE[grep("MA",as.character(gdat$Geography))]<-"MA"#
gdat$STATE[grep("MS",as.character(gdat$Geography))]<-"MS"
levels(gdat[,11])
levels(gdat[,10])
table(gdat[,11])
table(gdat[,12])
table(gdat[,13])
?order
?factor
rm(list=ls())#
#
library(statnet)#
#
dat_imp=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_implement.csv",row.names=1))#
dat_plan=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_plan.csv",row.names=1))#
dat_cons=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_consult.csv",row.names=1))#
dat_all=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_all.csv",row.names=1))#
dat_all=sort(dat_all[dat_all$Contact!=" "&dat_all$Contact!="",])#
resp.dat=read.csv(file="//Users/TScott/Google Drive/elwha/Response.Contact.Dat.csv",row.names=1)#
edge.dat=read.csv(file="//Users/TScott/Google Drive/elwha/Edgelist.Dat.Good.csv",row.names=1)#
head(sort(dat_all$Contact),10)#
temp = edge.dat[edge.dat$TType=="WT",]#
dat_imp = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_imp$Type = "Imp"#
#
temp = edge.dat[edge.dat$TType=="PT",]#
dat_plan = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_plan$Type = "Plan"#
#
temp = edge.dat[edge.dat$TType=="CT",]#
dat_cons = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_cons$Type = "Cons"#
#
temp = edge.dat#
dat_all = temp[temp$Contact!=""&temp$Contact!=" ",]#
#
vertexes.all<-sort(unique(c(as.character(dat_all[,1]),subset(as.character(dat_all[,2]),dat_all[,2]!=""&dat_all[,2]!=" "))))#
#
temp <- dat_imp#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Imp"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_imp = temp#
#
imp_net = as.network.matrix(as.matrix(edge_imp[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_imp = as.sociomatrix(imp_net)#
temp <- dat_plan#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Plan"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_plan = temp#
#
plan_net = as.network.matrix(as.matrix(edge_plan[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_plan = as.sociomatrix(plan_net)#
#
temp <- dat_cons#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Cons"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_cons = temp#
#
cons_net = as.network.matrix(as.matrix(edge_cons[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_cons = as.sociomatrix(cons_net)#
test = sort(data.frame(matrix(cbind(as.character(dat_all$ORG),as.character(dat_all$Contact),as.character(dat_all$TType)),ncol=3)))#
test2 = as.matrix(test)#
all_net = as.network.matrix(as.matrix(test2[,1:2]),matrix.type="edgelist",directed=TRUE)#
set.edge.attribute(all_net,value=test2[,3],attrname="Type")#
socmat_all = as.sociomatrix(all_net)[1:100]#
socmat_type = as.sociomatrix(all_net,attrname="Type")[1:100]#
#plot network, save plot#
#
library(ggplot2)#
library(grid)#
library(sna)#
library(Hmisc)#
library(reshape2)#
# Empty ggplot2 theme#
new_theme_empty <- theme_bw()#
new_theme_empty$line <- element_blank()#
new_theme_empty$rect <- element_blank()#
new_theme_empty$strip.text <- element_blank()#
new_theme_empty$axis.text <- element_blank()#
new_theme_empty$plot.title <- element_blank()#
new_theme_empty$axis.title <- element_blank()#
new_theme_empty$plot.margin <- structure(c(-1, -1, -1, -1), unit = "lines",#
                                         valid.unit = 3L, class = "unit")#
new_theme_empty$legend.position <- "bottom"#
new_theme_empty$legend.title <- element_text(face="bold",size=rel(1))#
new_theme_empty$legend.key.height<-c(3,unit="lines")#
#new_theme_empty$legend.margin<- unit(c(0,1,1,1),"cm")#
#new_theme_empty$legend.margin<-structure(c(-1, -1, -1, 0), unit = "lines")#
#data(coleman)  # Load a high school friendship network#
#adjacencyMatrix <- coleman[1, , ]  # Fall semester#
adjacencyMatrix <- socmat_all#
tieMatrix<-socmat_type#
layoutCoordinates <- gplot(adjacencyMatrix)  # Get graph layout coordinates#
adjacencyList <- melt(adjacencyMatrix)  # Convert to list of ties only#
adjacencyTT<-melt(tieMatrix)#
adjacencyList <- adjacencyList[adjacencyList$value > 0, ]#
adjacencyTie <- adjacencyTT[adjacencyTT$value != "0", ]#
#
#get.edge.value(first.net,attrname="TType")#
#list.edge.attributes(first.net)#
#tietype.names<-get.edge.attribute(first.net$mel,attrname="TType")#
# Function to generate paths between each connected node#
#
#len was 1000#
edgeMaker <- function(whichRow, len = 1000, curved = TRUE, tie.cols=adjacencyTie){#
  fromC <- layoutCoordinates[adjacencyList[whichRow, 1], ]  # Origin#
  toC <- layoutCoordinates[adjacencyList[whichRow, 2], ]  # Terminus#
  TieC <- tie.cols[whichRow, 3]  # TieType#
  # Add curve:#
  graphCenter <- colMeans(layoutCoordinates)  # Center of the overall graph#
  bezierMid <- c(fromC[1], toC[2])  # A midpoint, for bended edges#
  distance1 <- sum((graphCenter - bezierMid)^2)#
  if(distance1 < sum((graphCenter - c(toC[1], fromC[2]))^2)){#
    bezierMid <- c(toC[1], fromC[2])#
    }  # To select the best Bezier midpoint#
  bezierMid <- (fromC + toC + bezierMid) / 3  # Moderate the Bezier midpoint#
  if(curved == FALSE){bezierMid <- (fromC + toC) / 2}  # Remove the curve#
  edge <- data.frame(bezier(c(fromC[1], bezierMid[1], toC[1]),  # Generate#
                            c(fromC[2], bezierMid[2], toC[2]),  # X & y#
                            evaluation = len))  # Bezier path coordinates#
  edge$Sequence <- 1:len  # For size and colour weighting in plot#
  edge$Tie <- TieC#
  edge$Group <- paste(adjacencyList[whichRow, 1:2], collapse = ">")#
  return(edge)#
  }#
set.vertex.attribute(all_net,attrname="Ideg",value=degree(all_net,cmode="indegree"))#
set.vertex.attribute(all_net,attrname="Odeg",value=degree(all_net,cmode="outdegree"))#
Idg<-get.vertex.attribute(all_net,"Ideg")#
Odg<-get.vertex.attribute(all_net,"Odeg")#
Nme<-network.vertex.names(all_net)#
lC.df<-data.frame(layoutCoordinates,Idg,Odg,Nme)#
#Sample.LC<-data.frame(lC.df[sample(seq(1,nrow(lC.df),1),200),])#
#Set.LC<-data.frame(lC.df[sample(seq(1,nrow(lC.df),1),200),])#
#
Sample.LC<-data.frame(lC.df[#
c(#
which(lC.df$Nme=="WDOE"),#
which(lC.df$Nme=="USEPA"),#
which(lC.df$Nme=="WDFW"),#
which(lC.df$Nme=="King County"),#
which(lC.df$Nme=="NWIFC"),#
which(lC.df$Nme=="Mason County"),#
which(lC.df$Nme=="WSU"),#
which(lC.df$Nme=="Skagit Tribe"),#
which(lC.df$Nme=="PSP"),#
which(lC.df$Nme=="NOAA "),#
which(lC.df$Nme=="City of Kent"),#
which(lC.df$Nme=="Lummi Tribe"),#
which(lC.df$Nme=="Port of Tacoma"),#
which(lC.df$Nme=="Trout Unlimited"),#
which(lC.df$Nme=="Island Recycling"),#
which(lC.df$Nme=="Vashon Park District"),#
which(lC.df$Nme=="NatureBridge"),#
which(lC.df$Nme=="US Navy"),#
which(lC.df$Nme=="Stillwaters Environmental Center"),#
which(lC.df$Nme=="City of SeaTac")),])#
levels(Sample.LC$Nme)[170]<-"EPA"#
Sample.LC$Nme[Sample.LC$Nme=="USEPA"]<-"EPA"#
sort(layoutCoordinates[,1])#
#
# Generate a (curved) edge path for each pair of connected nodes#
allEdges <- lapply(1:nrow(adjacencyList), edgeMaker, len = 500, curved = TRUE,tie.cols=adjacencyTie)#
allEdges <- do.call(rbind, allEdges)  # a fine-grained path ^, with bend ^#
#
zp1 <- ggplot(allEdges)  # Pretty simple plot code#
zp1 <- zp1 + geom_path(aes(x = x, y = y, group = Group, #
						 colour = Tie, size = -Sequence,position="dodge"),alpha=.8 ) # Edges with gradient#
                            # and taper#
#zp1 <- zp1 + geom_path(aes(x = x, y = y, group = Group,  # Edges with gradient#
                          # colour = e.values, size = -Sequence))  # and taper#
zp1 <- zp1 + geom_point(data = data.frame(layoutCoordinates),  # Add nodes#
                        aes(x = x, y = y), size = 2, pch = 21,#
                        colour = "black", fill = "gray")  # Customize gradient v#
##zp1 <- zp1 + geom_text(data = data.frame(layoutCoordinates),  # Add nodes#
                       # aes(x = x, y = y,label=Nme), size = 2,#
                        #colour = "black", fill = "gray")#
zp1 <- zp1 + geom_text(data = data.frame(Sample.LC),  # Add nodes#
                        aes(x = x, y = y+2.2,label=Nme), size = 2,#
                        colour = "black", fill = "gray",fontface="bold") #
zp1 <- zp1 + geom_point(data = data.frame(Sample.LC),  # Add nodes#
                        aes(x = x, y = y), size = 2, pch = 21,#
                        colour = "black", fill = "black",position="jitter")  # Customize gradient v             #
#zp1 <- zp1 + geom_text(data = lC.df, aes(x=x,y=x,label=ifelse(Odg>20|Idg>20,as.character(Nme),"")),)  #
#zp1 <- zp1 + geom_text(data = Sample.LC, aes(x=x,y=x,label=as.character(Nme)))                       #
#zp1 <- zp1 + scale_colour_gradient(low = gray(0), high = gray(9/10), guide = "none")#
zp1 <- zp1 + scale_size(range = c(1/10, 1), guide = "none")  # Customize taper#
#zp1 <- zp1 + scale_x_continuous(limits = c(-55, 160))#
#zp1 <- zp1 + scale_y_continuous(limits= c(-175,40)) #
#zp1 <- zp1 + theme(legend.background = element_rect(colour = 'purple', fill = 'pink', size = 3, linetype='dashed'))#
zp1 <- zp1 + scale_colour_discrete(name="Tie Type",labels=c("Consultation","Planning","Implementation"))#
zp1 <- zp1 + guides(colour = guide_legend(title.position="top",title.hjust=.5,keyheight=1),line=element_line(size=2))#
zp2 <- zp1 + new_theme_empty  # Clean up plot#
print(zp2)#
#ggsave("/Users/TScott/Google Drive/elwha/ggplot network tie edges.png", zp2, type = "cairo-png")
head(adjacencyMatrix)
head(socmat_all)
socmat_all
rm(list=ls())#
#
library(statnet)#
#
dat_imp=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_implement.csv",row.names=1))#
dat_plan=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_plan.csv",row.names=1))#
dat_cons=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_consult.csv",row.names=1))#
dat_all=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_all.csv",row.names=1))#
dat_all=sort(dat_all[dat_all$Contact!=" "&dat_all$Contact!="",])#
resp.dat=read.csv(file="//Users/TScott/Google Drive/elwha/Response.Contact.Dat.csv",row.names=1)#
edge.dat=read.csv(file="//Users/TScott/Google Drive/elwha/Edgelist.Dat.Good.csv",row.names=1)#
head(sort(dat_all$Contact),10)#
temp = edge.dat[edge.dat$TType=="WT",]#
dat_imp = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_imp$Type = "Imp"#
#
temp = edge.dat[edge.dat$TType=="PT",]#
dat_plan = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_plan$Type = "Plan"#
#
temp = edge.dat[edge.dat$TType=="CT",]#
dat_cons = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_cons$Type = "Cons"#
#
temp = edge.dat#
dat_all = temp[temp$Contact!=""&temp$Contact!=" ",]#
#
vertexes.all<-sort(unique(c(as.character(dat_all[,1]),subset(as.character(dat_all[,2]),dat_all[,2]!=""&dat_all[,2]!=" "))))#
#
temp <- dat_imp#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Imp"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_imp = temp#
#
imp_net = as.network.matrix(as.matrix(edge_imp[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_imp = as.sociomatrix(imp_net)#
temp <- dat_plan#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Plan"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_plan = temp#
#
plan_net = as.network.matrix(as.matrix(edge_plan[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_plan = as.sociomatrix(plan_net)#
#
temp <- dat_cons#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Cons"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_cons = temp#
#
cons_net = as.network.matrix(as.matrix(edge_cons[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_cons = as.sociomatrix(cons_net)#
test = sort(data.frame(matrix(cbind(as.character(dat_all$ORG),as.character(dat_all$Contact),as.character(dat_all$TType)),ncol=3)))#
test2 = as.matrix(test)#
all_net = as.network.matrix(as.matrix(test2[,1:2]),matrix.type="edgelist",directed=TRUE)#
set.edge.attribute(all_net,value=test2[,3],attrname="Type")#
socmat_all = as.sociomatrix(all_net)[1:100,1:100]#
socmat_type = as.sociomatrix(all_net,attrname="Type")[1:100,1:100]
head(socmat_all)
rm(list=ls())#
#
library(statnet)#
#
dat_imp=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_implement.csv",row.names=1))#
dat_plan=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_plan.csv",row.names=1))#
dat_cons=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_consult.csv",row.names=1))#
dat_all=sort(read.csv(file="//Users/TScott/Google Drive/elwha/edgelist_all.csv",row.names=1))#
dat_all=sort(dat_all[dat_all$Contact!=" "&dat_all$Contact!="",])#
resp.dat=read.csv(file="//Users/TScott/Google Drive/elwha/Response.Contact.Dat.csv",row.names=1)#
edge.dat=read.csv(file="//Users/TScott/Google Drive/elwha/Edgelist.Dat.Good.csv",row.names=1)#
head(sort(dat_all$Contact),10)#
temp = edge.dat[edge.dat$TType=="WT",]#
dat_imp = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_imp$Type = "Imp"#
#
temp = edge.dat[edge.dat$TType=="PT",]#
dat_plan = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_plan$Type = "Plan"#
#
temp = edge.dat[edge.dat$TType=="CT",]#
dat_cons = temp[temp$Contact!=""&temp$Contact!=" ",]#
dat_cons$Type = "Cons"#
#
temp = edge.dat#
dat_all = temp[temp$Contact!=""&temp$Contact!=" ",]#
#
vertexes.all<-sort(unique(c(as.character(dat_all[,1]),subset(as.character(dat_all[,2]),dat_all[,2]!=""&dat_all[,2]!=" "))))#
#
temp <- dat_imp#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Imp"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_imp = temp#
#
imp_net = as.network.matrix(as.matrix(edge_imp[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_imp = as.sociomatrix(imp_net)#
temp <- dat_plan#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Plan"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_plan = temp#
#
plan_net = as.network.matrix(as.matrix(edge_plan[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_plan = as.sociomatrix(plan_net)#
#
temp <- dat_cons#
unique.edges<-data.frame(cbind(as.character(sort(unique(paste(temp$ORG,temp$Contact,sep="@@x@@")))),as.numeric(table(paste(temp$ORG,temp$Contact,sep="@@x@@")))))#
unique.edges[,2]<-as.numeric(unique.edges[,2]);colnames(unique.edges)<-c("combi","count")#
library(stringr)#
temp<-data.frame(cbind((str_split_fixed(unique.edges$combi, "@@x@@", 2)),unique.edges$count))#
temp$Type = "Cons"#
colnames(temp) = c("Tail","Head","Count","Type")#
edge_cons = temp#
#
cons_net = as.network.matrix(as.matrix(edge_cons[,1:2]),matrix.type="edgelist",directed=TRUE)#
socmat_cons = as.sociomatrix(cons_net)#
test = sort(data.frame(matrix(cbind(as.character(dat_all$ORG),as.character(dat_all$Contact),as.character(dat_all$TType)),ncol=3)))#
test2 = as.matrix(test)#
all_net = as.network.matrix(as.matrix(test2[,1:2]),matrix.type="edgelist",directed=TRUE)#
set.edge.attribute(all_net,value=test2[,3],attrname="Type")#
socmat_all = as.sociomatrix(all_net)[1:100,1:100]#
socmat_type = as.sociomatrix(all_net,attrname="Type")[1:100,1:100]#
#plot network, save plot#
#
library(ggplot2)#
library(grid)#
library(sna)#
library(Hmisc)#
library(reshape2)#
# Empty ggplot2 theme#
new_theme_empty <- theme_bw()#
new_theme_empty$line <- element_blank()#
new_theme_empty$rect <- element_blank()#
new_theme_empty$strip.text <- element_blank()#
new_theme_empty$axis.text <- element_blank()#
new_theme_empty$plot.title <- element_blank()#
new_theme_empty$axis.title <- element_blank()#
new_theme_empty$plot.margin <- structure(c(-1, -1, -1, -1), unit = "lines",#
                                         valid.unit = 3L, class = "unit")#
new_theme_empty$legend.position <- "bottom"#
new_theme_empty$legend.title <- element_text(face="bold",size=rel(1))#
new_theme_empty$legend.key.height<-c(3,unit="lines")#
#new_theme_empty$legend.margin<- unit(c(0,1,1,1),"cm")#
adjacencyMatrix <- socmat_all#
tieMatrix<-socmat_type#
#
layoutCoordinates <- gplot(adjacencyMatrix)  # Get graph layout coordinates#
adjacencyList <- melt(adjacencyMatrix)  # Convert to list of ties only#
adjacencyTT<-melt(tieMatrix)#
adjacencyList <- adjacencyList[adjacencyList$value > 0, ]#
adjacencyTie <- adjacencyTT[adjacencyTT$value != "0", ]#
#
#get.edge.value(first.net,attrname="TType")#
#list.edge.attributes(first.net)#
#tietype.names<-get.edge.attribute(first.net$mel,attrname="TType")#
# Function to generate paths between each connected node#
#
#len was 1000#
edgeMaker <- function(whichRow, len = 1000, curved = TRUE, tie.cols=adjacencyTie){#
  fromC <- layoutCoordinates[adjacencyList[whichRow, 1], ]  # Origin#
  toC <- layoutCoordinates[adjacencyList[whichRow, 2], ]  # Terminus#
  TieC <- tie.cols[whichRow, 3]  # TieType#
  # Add curve:#
  graphCenter <- colMeans(layoutCoordinates)  # Center of the overall graph#
  bezierMid <- c(fromC[1], toC[2])  # A midpoint, for bended edges#
  distance1 <- sum((graphCenter - bezierMid)^2)#
  if(distance1 < sum((graphCenter - c(toC[1], fromC[2]))^2)){#
    bezierMid <- c(toC[1], fromC[2])#
    }  # To select the best Bezier midpoint#
  bezierMid <- (fromC + toC + bezierMid) / 3  # Moderate the Bezier midpoint#
  if(curved == FALSE){bezierMid <- (fromC + toC) / 2}  # Remove the curve#
  edge <- data.frame(bezier(c(fromC[1], bezierMid[1], toC[1]),  # Generate#
                            c(fromC[2], bezierMid[2], toC[2]),  # X & y#
                            evaluation = len))  # Bezier path coordinates#
  edge$Sequence <- 1:len  # For size and colour weighting in plot#
  edge$Tie <- TieC#
  edge$Group <- paste(adjacencyList[whichRow, 1:2], collapse = ">")#
  return(edge)#
  }#
set.vertex.attribute(all_net,attrname="Ideg",value=degree(all_net,cmode="indegree"))#
set.vertex.attribute(all_net,attrname="Odeg",value=degree(all_net,cmode="outdegree"))#
Idg<-get.vertex.attribute(all_net,"Ideg")#
Odg<-get.vertex.attribute(all_net,"Odeg")#
Nme<-network.vertex.names(all_net)#
lC.df<-data.frame(layoutCoordinates,Idg,Odg,Nme)#
#Sample.LC<-data.frame(lC.df[sample(seq(1,nrow(lC.df),1),200),])#
#Set.LC<-data.frame(lC.df[sample(seq(1,nrow(lC.df),1),200),])#
#
Sample.LC<-data.frame(lC.df[#
c(#
which(lC.df$Nme=="WDOE"),#
which(lC.df$Nme=="USEPA"),#
which(lC.df$Nme=="WDFW"),#
which(lC.df$Nme=="King County"),#
which(lC.df$Nme=="NWIFC"),#
which(lC.df$Nme=="Mason County"),#
which(lC.df$Nme=="WSU"),#
which(lC.df$Nme=="Skagit Tribe"),#
which(lC.df$Nme=="PSP"),#
which(lC.df$Nme=="NOAA "),#
which(lC.df$Nme=="City of Kent"),#
which(lC.df$Nme=="Lummi Tribe"),#
which(lC.df$Nme=="Port of Tacoma"),#
which(lC.df$Nme=="Trout Unlimited"),#
which(lC.df$Nme=="Island Recycling"),#
which(lC.df$Nme=="Vashon Park District"),#
which(lC.df$Nme=="NatureBridge"),#
which(lC.df$Nme=="US Navy"),#
which(lC.df$Nme=="Stillwaters Environmental Center"),#
which(lC.df$Nme=="City of SeaTac")),])#
levels(Sample.LC$Nme)[170]<-"EPA"#
Sample.LC$Nme[Sample.LC$Nme=="USEPA"]<-"EPA"#
sort(layoutCoordinates[,1])#
#
# Generate a (curved) edge path for each pair of connected nodes#
allEdges <- lapply(1:nrow(adjacencyList), edgeMaker, len = 500, curved = TRUE,tie.cols=adjacencyTie)#
allEdges <- do.call(rbind, allEdges)  # a fine-grained path ^, with bend ^#
#
zp1 <- ggplot(allEdges)  # Pretty simple plot code#
zp1 <- zp1 + geom_path(aes(x = x, y = y, group = Group, #
						 colour = Tie, size = -Sequence,position="dodge"),alpha=.8 ) # Edges with gradient#
                            # and taper#
#zp1 <- zp1 + geom_path(aes(x = x, y = y, group = Group,  # Edges with gradient#
                          # colour = e.values, size = -Sequence))  # and taper#
zp1 <- zp1 + geom_point(data = data.frame(layoutCoordinates),  # Add nodes#
                        aes(x = x, y = y), size = 2, pch = 21,#
                        colour = "black", fill = "gray")  # Customize gradient v#
##zp1 <- zp1 + geom_text(data = data.frame(layoutCoordinates),  # Add nodes#
                       # aes(x = x, y = y,label=Nme), size = 2,#
                        #colour = "black", fill = "gray")#
zp1 <- zp1 + geom_text(data = data.frame(Sample.LC),  # Add nodes#
                        aes(x = x, y = y+2.2,label=Nme), size = 2,#
                        colour = "black", fill = "gray",fontface="bold") #
zp1 <- zp1 + geom_point(data = data.frame(Sample.LC),  # Add nodes#
                        aes(x = x, y = y), size = 2, pch = 21,#
                        colour = "black", fill = "black",position="jitter")  # Customize gradient v             #
#zp1 <- zp1 + geom_text(data = lC.df, aes(x=x,y=x,label=ifelse(Odg>20|Idg>20,as.character(Nme),"")),)  #
#zp1 <- zp1 + geom_text(data = Sample.LC, aes(x=x,y=x,label=as.character(Nme)))                       #
#zp1 <- zp1 + scale_colour_gradient(low = gray(0), high = gray(9/10), guide = "none")#
zp1 <- zp1 + scale_size(range = c(1/10, 1), guide = "none")  # Customize taper#
#zp1 <- zp1 + scale_x_continuous(limits = c(-55, 160))#
#zp1 <- zp1 + scale_y_continuous(limits= c(-175,40)) #
#zp1 <- zp1 + theme(legend.background = element_rect(colour = 'purple', fill = 'pink', size = 3, linetype='dashed'))#
zp1 <- zp1 + scale_colour_discrete(name="Tie Type",labels=c("Consultation","Planning","Implementation"))#
zp1 <- zp1 + guides(colour = guide_legend(title.position="top",title.hjust=.5,keyheight=1),line=element_line(size=2))#
zp2 <- zp1 + new_theme_empty  # Clean up plot#
print(zp2)#
#ggsave("/Users/TScott/Google Drive/elwha/ggplot network tie edges.png", zp2, type = "cairo-png")
rm(list=ls())#
#
library(statnet)
?network
update_statnet()
network.initialize(100,directed=TRUE,bipartite=TRUE,99)
network.initialize(100,directed=TRUE,bipartite=99)
fnet<-network.initialize(100,directed=TRUE,bipartite=99)
Create a random network#
m <- matrix(rbinom(25,1,0.5),5,5)#
diag(m) <- 0#
g <- network(m)#
#Coerce to matrix form#
as.matrix.network(g,matrix.type="adjacency")#
as.matrix.network(g,matrix.type="incidence")#
as.matrix.network(g,matrix.type="edgelist")
g
Create a random network#
m <- matrix(rbinom(25,1,0.5),10,10)#
diag(m) <- 0#
g <- network(m)#
#Coerce to matrix form#
as.matrix.network(g,matrix.type="adjacency")#
as.matrix.network(g,matrix.type="incidence")#
as.matrix.network(g,matrix.type="edgelist")
g
Create a random network#
m <- matrix(rbinom(25,1,0.5),50,50)#
diag(m) <- 0#
g <- network(m)#
#Coerce to matrix form#
as.matrix.network(g,matrix.type="adjacency")#
as.matrix.network(g,matrix.type="incidence")#
as.matrix.network(g,matrix.type="edgelist")
g
Create a random network#
m <- matrix(rbinom(25,1,0.5),40,40)#
diag(m) <- 0#
g <- network(m)#
#Coerce to matrix form#
as.matrix.network(g,matrix.type="adjacency")#
as.matrix.network(g,matrix.type="incidence")#
as.matrix.network(g,matrix.type="edgelist")
g
head(m)
rbinom(25,1,.05)
rbinom(25,1,.5)
m <- matrix(rbinom(25,1,0.25),40,40)
m
Create a random network#
m <- matrix(rbinom(25,1,0.25),40,40)#
diag(m) <- 0#
g <- network(m)#
g
m <- matrix(rbinom(25,1,0.15),40,40)#
diag(m) <- 0#
g <- network(m)#
g
m <- matrix(rbinom(25,1,0.10),40,40)#
diag(m) <- 0#
g <- network(m)#
g
?rbinom
m <- matrix(rbinom(25,1,0.001),40,40)#
diag(m) <- 0#
g <- network(m)#
g
m <- matrix(rbinom(25,1,0.05),40,40)#
diag(m) <- 0#
g <- network(m)
g
Coerce to matrix form#
as.matrix.network(g,matrix.type="adjacency")#
as.matrix.network(g,matrix.type="incidence")#
as.matrix.network(g,matrix.type="edgelist")
g
plot network, save plot#
#
library(ggplot2)#
library(grid)#
library(sna)#
library(Hmisc)#
library(reshape2)#
# Empty ggplot2 theme#
new_theme_empty <- theme_bw()#
new_theme_empty$line <- element_blank()#
new_theme_empty$rect <- element_blank()#
new_theme_empty$strip.text <- element_blank()#
new_theme_empty$axis.text <- element_blank()#
new_theme_empty$plot.title <- element_blank()#
new_theme_empty$axis.title <- element_blank()#
new_theme_empty$plot.margin <- structure(c(-1, -1, -1, -1), unit = "lines",#
                                         valid.unit = 3L, class = "unit")#
new_theme_empty$legend.position <- "bottom"#
new_theme_empty$legend.title <- element_text(face="bold",size=rel(1))#
new_theme_empty$legend.key.height<-c(3,unit="lines")#
#new_theme_empty$legend.margin<- unit(c(0,1,1,1),"cm")#
#
socmat_all<-as.sociomatrix(g)#
adjacencyMatrix<-socmat_all#
tieMatrix<-socmat_type
socmat_all<-as.sociomatrix(g)#
adjacencyMatrix<-socmat_all#
#tieMatrix<-socmat_type#
#
layoutCoordinates <- gplot(adjacencyMatrix)  # Get graph layout coordinates#
adjacencyList <- melt(adjacencyMatrix)  # Convert to list of ties only#
#adjacencyTT<-melt(tieMatrix)#
#adjacencyList <- adjacencyList[adjacencyList$value > 0, ]#
#adjacencyTie <- adjacencyTT[adjacencyTT$value != "0", ]#
#
#get.edge.value(first.net,attrname="TType")#
#list.edge.attributes(first.net)#
#tietype.names<-get.edge.attribute(first.net$mel,attrname="TType")#
# Function to generate paths between each connected node#
#
#len was 1000#
edgeMaker <- function(whichRow, len = 1000, curved = TRUE, tie.cols=adjacencyTie){#
  fromC <- layoutCoordinates[adjacencyList[whichRow, 1], ]  # Origin#
  toC <- layoutCoordinates[adjacencyList[whichRow, 2], ]  # Terminus#
  TieC <- tie.cols[whichRow, 3]  # TieType#
  # Add curve:#
  graphCenter <- colMeans(layoutCoordinates)  # Center of the overall graph#
  bezierMid <- c(fromC[1], toC[2])  # A midpoint, for bended edges#
  distance1 <- sum((graphCenter - bezierMid)^2)#
  if(distance1 < sum((graphCenter - c(toC[1], fromC[2]))^2)){#
    bezierMid <- c(toC[1], fromC[2])#
    }  # To select the best Bezier midpoint#
  bezierMid <- (fromC + toC + bezierMid) / 3  # Moderate the Bezier midpoint#
  if(curved == FALSE){bezierMid <- (fromC + toC) / 2}  # Remove the curve#
  edge <- data.frame(bezier(c(fromC[1], bezierMid[1], toC[1]),  # Generate#
                            c(fromC[2], bezierMid[2], toC[2]),  # X & y#
                            evaluation = len))  # Bezier path coordinates#
  edge$Sequence <- 1:len  # For size and colour weighting in plot#
  edge$Tie <- TieC#
  edge$Group <- paste(adjacencyList[whichRow, 1:2], collapse = ">")#
  return(edge)#
  }
Generate a (curved) edge path for each pair of connected nodes#
allEdges <- lapply(1:nrow(adjacencyList), edgeMaker, len = 500, curved = TRUE,tie.cols=adjacencyTie)#
allEdges <- do.call(rbind, allEdges)  # a fine-grained path ^, with bend ^#
#
zp1 <- ggplot(allEdges)  # Pretty simple plot code#
zp1 <- zp1 + geom_path(aes(x = x, y = y, group = Group, #
						 colour = Tie, size = -Sequence,position="dodge"),alpha=.8 ) # Edges with gradient#
                            # and taper#
#zp1 <- zp1 + geom_path(aes(x = x, y = y, group = Group,  # Edges with gradient#
                          # colour = e.values, size = -Sequence))  # and taper#
zp1 <- zp1 + geom_point(data = data.frame(layoutCoordinates),  # Add nodes#
                        aes(x = x, y = y), size = 2, pch = 21,#
                        colour = "black", fill = "gray")  # Customize gradient v#
##zp1 <- zp1 + geom_text(data = data.frame(layoutCoordinates),  # Add nodes#
                       # aes(x = x, y = y,label=Nme), size = 2,#
                        #colour = "black", fill = "gray")#
zp1 <- zp1 + geom_text(data = data.frame(Sample.LC),  # Add nodes#
                        aes(x = x, y = y+2.2,label=Nme), size = 2,#
                        colour = "black", fill = "gray",fontface="bold") #
zp1 <- zp1 + geom_point(data = data.frame(Sample.LC),  # Add nodes#
                        aes(x = x, y = y), size = 2, pch = 21,#
                        colour = "black", fill = "black",position="jitter")  # Customize gradient v             #
#zp1 <- zp1 + geom_text(data = lC.df, aes(x=x,y=x,label=ifelse(Odg>20|Idg>20,as.character(Nme),"")),)  #
#zp1 <- zp1 + geom_text(data = Sample.LC, aes(x=x,y=x,label=as.character(Nme)))                       #
#zp1 <- zp1 + scale_colour_gradient(low = gray(0), high = gray(9/10), guide = "none")#
zp1 <- zp1 + scale_size(range = c(1/10, 1), guide = "none")  # Customize taper#
#zp1 <- zp1 + scale_x_continuous(limits = c(-55, 160))#
#zp1 <- zp1 + scale_y_continuous(limits= c(-175,40)) #
#zp1 <- zp1 + theme(legend.background = element_rect(colour = 'purple', fill = 'pink', size = 3, linetype='dashed'))#
zp1 <- zp1 + scale_colour_discrete(name="Tie Type",labels=c("Consultation","Planning","Implementation"))#
zp1 <- zp1 + guides(colour = guide_legend(title.position="top",title.hjust=.5,keyheight=1),line=element_line(size=2))#
zp2 <- zp1 + new_theme_empty  # Clean up plot#
print(zp2)
allEdges <- lapply(1:nrow(adjacencyList), edgeMaker, len = 500, curved = TRUE)#
allEdges <- do.call(rbind, allEdges)  # a fine-grained path ^, with bend ^#
#
zp1 <- ggplot(allEdges)  # Pretty simple plot code#
zp1 <- zp1 + geom_path(aes(x = x, y = y, group = Group, #
						 colour = Tie, size = -Sequence,position="dodge"),alpha=.8 ) # Edges with gradient#
                            # and taper#
#zp1 <- zp1 + geom_path(aes(x = x, y = y, group = Group,  # Edges with gradient#
                          # colour = e.values, size = -Sequence))  # and taper#
zp1 <- zp1 + geom_point(data = data.frame(layoutCoordinates),  # Add nodes#
                        aes(x = x, y = y), size = 2, pch = 21,#
                        colour = "black", fill = "gray")  # Customize gradient v#
##zp1 <- zp1 + geom_text(data = data.frame(layoutCoordinates),  # Add nodes#
                       # aes(x = x, y = y,label=Nme), size = 2,#
                        #colour = "black", fill = "gray")#
zp1 <- zp1 + geom_text(data = data.frame(Sample.LC),  # Add nodes#
                        aes(x = x, y = y+2.2,label=Nme), size = 2,#
                        colour = "black", fill = "gray",fontface="bold") #
zp1 <- zp1 + geom_point(data = data.frame(Sample.LC),  # Add nodes#
                        aes(x = x, y = y), size = 2, pch = 21,#
                        colour = "black", fill = "black",position="jitter")  # Customize gradient v             #
#zp1 <- zp1 + geom_text(data = lC.df, aes(x=x,y=x,label=ifelse(Odg>20|Idg>20,as.character(Nme),"")),)  #
#zp1 <- zp1 + geom_text(data = Sample.LC, aes(x=x,y=x,label=as.character(Nme)))                       #
#zp1 <- zp1 + scale_colour_gradient(low = gray(0), high = gray(9/10), guide = "none")#
zp1 <- zp1 + scale_size(range = c(1/10, 1), guide = "none")  # Customize taper#
#zp1 <- zp1 + scale_x_continuous(limits = c(-55, 160))#
#zp1 <- zp1 + scale_y_continuous(limits= c(-175,40)) #
#zp1 <- zp1 + theme(legend.background = element_rect(colour = 'purple', fill = 'pink', size = 3, linetype='dashed'))#
zp1 <- zp1 + scale_colour_discrete(name="Tie Type",labels=c("Consultation","Planning","Implementation"))#
zp1 <- zp1 + guides(colour = guide_legend(title.position="top",title.hjust=.5,keyheight=1),line=element_line(size=2))#
zp2 <- zp1 + new_theme_empty  # Clean up plot#
print(zp2)
allEdges <- lapply(1:nrow(adjacencyList), edgeMaker, len = 500, curved = TRUE)
socmat_all<-as.sociomatrix(g)#
adjacencyMatrix<-socmat_all#
#tieMatrix<-socmat_type#
#
layoutCoordinates <- gplot(adjacencyMatrix)  # Get graph layout coordinates#
adjacencyList <- melt(adjacencyMatrix)  # Convert to list of ties only#
#adjacencyTT<-melt(tieMatrix)#
#adjacencyList <- adjacencyList[adjacencyList$value > 0, ]#
adjacencyTie <- adjacencyTT[adjacencyTT$value != "0", ]
socmat_all<-as.sociomatrix(g)#
adjacencyMatrix<-socmat_all#
tieMatrix<-socmat_all#
#
layoutCoordinates <- gplot(adjacencyMatrix)  # Get graph layout coordinates#
adjacencyList <- melt(adjacencyMatrix)  # Convert to list of ties only#
adjacencyTT<-melt(tieMatrix)#
#adjacencyList <- adjacencyList[adjacencyList$value > 0, ]#
adjacencyTie <- adjacencyTT[adjacencyTT$value != "0", ]
load("/Users/TScott/Google Drive/elwha/Ready_to_ERGM.RData")
rm(list=ls())
ls()
net_temp
net_temp_all
setRepositories(addURLs="http://statnet.csde.washington.edu/preview")
install.packages("ergm")
setRespositories()
setRepositories()
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
length(unique(fdat$HUC4))#
length(unique(fdat$HUC6))#
#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[,1],#
modsum_PTL_base$coef[,4],#
modsum_NTL_base$coef[,1],#
modsum_NTL_base$coef[,4],#
modsum_TURB_base$coef[,1],#
modsum_TURB_base$coef[,4],#
modsum_MMI_BENT_base$coef[,1],#
modsum_MMI_BENT_base$coef[,4],#
modsum_XCMGW_base$coef[,1],#
modsum_XCMGW_base$coef[,4],#
modsum_XFC_NAT_base$coef[,1],#
modsum_XFC_NAT_base$coef[,4])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_rep<-cbind(modsum_PTL_rep$coef[,1],#
modsum_PTL_rep$coef[,4],#
modsum_NTL_rep$coef[,1],#
modsum_NTL_rep$coef[,4],#
modsum_TURB_rep$coef[,1],#
modsum_TURB_rep$coef[,4],#
modsum_MMI_BENT_rep$coef[,1],#
modsum_MMI_BENT_rep$coef[,4],#
modsum_XCMGW_rep$coef[,1],#
modsum_XCMGW_rep$coef[,4],#
modsum_XFC_NAT_rep$coef[,1],#
modsum_XFC_NAT_rep$coef[,4])#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_res<-cbind(modsum_PTL_res$coef[,1],#
modsum_PTL_res$coef[,4],#
modsum_NTL_res$coef[,1],#
modsum_NTL_res$coef[,4],#
modsum_TURB_res$coef[,1],#
modsum_TURB_res$coef[,4],#
modsum_MMI_BENT_res$coef[,1],#
modsum_MMI_BENT_res$coef[,4],#
modsum_XCMGW_res$coef[,1],#
modsum_XCMGW_res$coef[,4],#
modsum_XFC_NAT_res$coef[,1],#
modsum_XFC_NAT_res$coef[,4])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
#make csv file that is table of fixed effects from base models#
fix_form<-cbind(modsum_PTL_form$coef[,1],#
modsum_PTL_form$coef[,4],#
modsum_NTL_form$coef[,1],#
modsum_NTL_form$coef[,4],#
modsum_TURB_form$coef[,1],#
modsum_TURB_form$coef[,4],#
modsum_MMI_BENT_form$coef[,1],#
modsum_MMI_BENT_form$coef[,4],#
modsum_XCMGW_form$coef[,1],#
modsum_XCMGW_form$coef[,4],#
modsum_XFC_NAT_form$coef[,1],#
modsum_XFC_NAT_form$coef[,4])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#make csv file that is table of fixed effects from base models#
fix_fun<-cbind(modsum_PTL_fun$coef[,1],#
modsum_PTL_fun$coef[,4],#
modsum_NTL_fun$coef[,1],#
modsum_NTL_fun$coef[,4],#
modsum_TURB_fun$coef[,1],#
modsum_TURB_fun$coef[,4],#
modsum_MMI_BENT_fun$coef[,1],#
modsum_MMI_BENT_fun$coef[,4],#
modsum_XCMGW_fun$coef[,1],#
modsum_XCMGW_fun$coef[,4],#
modsum_XFC_NAT_fun$coef[,1],#
modsum_XFC_NAT_fun$coef[,4])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')
summary(M_XCMGW_fun)
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
length(unique(fdat$HUC4))#
length(unique(fdat$HUC6))#
#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[,1],#
modsum_PTL_base$coef[,4],#
modsum_NTL_base$coef[,1],#
modsum_NTL_base$coef[,4],#
modsum_TURB_base$coef[,1],#
modsum_TURB_base$coef[,4],#
modsum_MMI_BENT_base$coef[,1],#
modsum_MMI_BENT_base$coef[,4],#
modsum_XCMGW_base$coef[,1],#
modsum_XCMGW_base$coef[,4],#
modsum_XFC_NAT_base$coef[,1],#
modsum_XFC_NAT_base$coef[,4])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_rep<-cbind(modsum_PTL_rep$coef[,1],#
modsum_PTL_rep$coef[,4],#
modsum_NTL_rep$coef[,1],#
modsum_NTL_rep$coef[,4],#
modsum_TURB_rep$coef[,1],#
modsum_TURB_rep$coef[,4],#
modsum_MMI_BENT_rep$coef[,1],#
modsum_MMI_BENT_rep$coef[,4],#
modsum_XCMGW_rep$coef[,1],#
modsum_XCMGW_rep$coef[,4],#
modsum_XFC_NAT_rep$coef[,1],#
modsum_XFC_NAT_rep$coef[,4])#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_res<-cbind(modsum_PTL_res$coef[,1],#
modsum_PTL_res$coef[,4],#
modsum_NTL_res$coef[,1],#
modsum_NTL_res$coef[,4],#
modsum_TURB_res$coef[,1],#
modsum_TURB_res$coef[,4],#
modsum_MMI_BENT_res$coef[,1],#
modsum_MMI_BENT_res$coef[,4],#
modsum_XCMGW_res$coef[,1],#
modsum_XCMGW_res$coef[,4],#
modsum_XFC_NAT_res$coef[,1],#
modsum_XFC_NAT_res$coef[,4])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
#make csv file that is table of fixed effects from base models#
fix_form<-cbind(modsum_PTL_form$coef[,1],#
modsum_PTL_form$coef[,4],#
modsum_NTL_form$coef[,1],#
modsum_NTL_form$coef[,4],#
modsum_TURB_form$coef[,1],#
modsum_TURB_form$coef[,4],#
modsum_MMI_BENT_form$coef[,1],#
modsum_MMI_BENT_form$coef[,4],#
modsum_XCMGW_form$coef[,1],#
modsum_XCMGW_form$coef[,4],#
modsum_XFC_NAT_form$coef[,1],#
modsum_XFC_NAT_form$coef[,4])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#
summary(M_XCMGW_fun)#
#make csv file that is table of fixed effects from base models#
fix_fun<-cbind(modsum_PTL_fun$coef[,1],#
modsum_PTL_fun$coef[,4],#
modsum_NTL_fun$coef[,1],#
modsum_NTL_fun$coef[,4],#
modsum_TURB_fun$coef[,1],#
modsum_TURB_fun$coef[,4],#
modsum_MMI_BENT_fun$coef[,1],#
modsum_MMI_BENT_fun$coef[,4],#
modsum_XCMGW_fun$coef[,1],#
modsum_XCMGW_fun$coef[,4],#
modsum_XFC_NAT_fun$coef[,1],#
modsum_XFC_NAT_fun$coef[,4])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_10.csv")
head(modsum_PTL_form)
head(modsum_PTL_form$coef)
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
length(unique(fdat$HUC4))#
length(unique(fdat$HUC6))#
#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")
M_PTL_base
M_PTL_base$coef
summary(M_PTL_base)
summary(M_PTL_base)$coef
car::Anova(M_PTL_base)
car::Anova(M_PTL_base)[,4]
car::Anova(M_PTL_base)[,3]
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
length(unique(fdat$HUC4))#
length(unique(fdat$HUC6))#
#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[,1],#
car::Anova(M_PTL_base)[,3],#
modsum_NTL_base$coef[,1],#
car::Anova(M_NTL_base)[,3],#
modsum_TURB_base$coef[,1],#
car::Anova(M_TURB_base)[,3],#
modsum_MMI_BENT_base$coef[,1],#
car::Anova(M_BENT_base)[,3],#
modsum_XCMGW_base$coef[,1],#
car::Anova(M_XCMGW_base)[,3],#
modsum_XFC_NAT_base$coef[,1],#
car::Anova(M_NAT_base)[,3])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_rep<-cbind(modsum_PTL_rep$coef[,1],#
car::Anova(M_PTL_rep)[,3],#
modsum_NTL_rep$coef[,1],#
car::Anova(M_NTL_rep)[,3],#
modsum_TURB_rep$coef[,1],#
car::Anova(M_TURB_rep)[,3],#
modsum_MMI_BENT_rep$coef[,1],#
car::Anova(M_BENT_rep)[,3],#
modsum_XCMGW_rep$coef[,1],#
car::Anova(M_XCMGW_rep)[,3],#
modsum_XFC_NAT_rep$coef[,1],#
car::Anova(M_NAT_rep)[,3])#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_res<-cbind(modsum_PTL_res$coef[,1],#
car::Anova(M_PTL_res)[,3],#
modsum_NTL_res$coef[,1],#
car::Anova(M_NTL_res)[,3],#
modsum_TURB_res$coef[,1],#
car::Anova(M_TURB_res)[,3],#
modsum_MMI_BENT_res$coef[,1],#
car::Anova(M_BENT_res)[,3],#
modsum_XCMGW_res$coef[,1],#
car::Anova(M_XCMGW_res)[,3],#
modsum_XFC_NAT_res$coef[,1],#
car::Anova(M_NAT_res)[,3])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_form<-cbind(modsum_PTL_form$coef[,1],#
car::Anova(M_PTL_form)[,3],#
modsum_NTL_form$coef[,1],#
car::Anova(M_NTL_form)[,3],#
modsum_TURB_form$coef[,1],#
car::Anova(M_TURB_form)[,3],#
modsum_MMI_BENT_form$coef[,1],#
car::Anova(M_BENT_form)[,3],#
modsum_XCMGW_form$coef[,1],#
car::Anova(M_XCMGW_form)[,3],#
modsum_XFC_NAT_form$coef[,1],#
car::Anova(M_NAT_form)[,3])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#make csv file that is table of fixed effects from base models#
fix_fun<-cbind(modsum_PTL_fun$coef[,1],#
car::Anova(M_PTL_fun)[,3],#
modsum_NTL_fun$coef[,1],#
car::Anova(M_NTL_fun)[,3],#
modsum_TURB_fun$coef[,1],#
car::Anova(M_TURB_fun)[,3],#
modsum_MMI_BENT_fun$coef[,1],#
car::Anova(M_BENT_fun)[,3],#
modsum_XCMGW_fun$coef[,1],#
car::Anova(M_XCMGW_fun)[,3],#
modsum_XFC_NAT_fun$coef[,1],#
car::Anova(M_NAT_fun)[,3])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_10.csv")
M_BENT_fun
fix_form
make csv file that is table of fixed effects from base models#
fix_form<-cbind(modsum_PTL_form$coef[,1],#
car::Anova(M_PTL_form)[,3],#
modsum_NTL_form$coef[,1],#
car::Anova(M_NTL_form)[,3],#
modsum_TURB_form$coef[,1],#
car::Anova(M_TURB_form)[,3],#
modsum_MMI_BENT_form$coef[,1],#
car::Anova(M_BENT_form)[,3],#
modsum_XCMGW_form$coef[,1],#
car::Anova(M_XCMGW_form)[,3],#
modsum_XFC_NAT_form$coef[,1],#
car::Anova(M_NAT_form)[,3])
make csv file that is table of fixed effects from base models#
fix_fun<-cbind(modsum_PTL_fun$coef[,1],#
car::Anova(M_PTL_fun)[,3],#
modsum_NTL_fun$coef[,1],#
car::Anova(M_NTL_fun)[,3],#
modsum_TURB_fun$coef[,1],#
car::Anova(M_TURB_fun)[,3],#
modsum_MMI_BENT_fun$coef[,1],#
car::Anova(M_MMI_BENT_fun)[,3],#
modsum_XCMGW_fun$coef[,1],#
car::Anova(M_XCMGW_fun)[,3],#
modsum_XFC_NAT_fun$coef[,1],#
car::Anova(M_NAT_fun)[,3])
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
length(unique(fdat$HUC4))#
length(unique(fdat$HUC6))#
#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[,1],#
car::Anova(M_PTL_base)[,3],#
modsum_NTL_base$coef[,1],#
car::Anova(M_NTL_base)[,3],#
modsum_TURB_base$coef[,1],#
car::Anova(M_TURB_base)[,3],#
modsum_MMI_BENT_base$coef[,1],#
car::Anova(M_MMI_BENT_base)[,3],#
modsum_XCMGW_base$coef[,1],#
car::Anova(M_XCMGW_base)[,3],#
modsum_XFC_NAT_base$coef[,1],#
car::Anova(M_XFC_NAT_base)[,3])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_rep<-cbind(modsum_PTL_rep$coef[,1],#
car::Anova(M_PTL_rep)[,3],#
modsum_NTL_rep$coef[,1],#
car::Anova(M_NTL_rep)[,3],#
modsum_TURB_rep$coef[,1],#
car::Anova(M_TURB_rep)[,3],#
modsum_MMI_BENT_rep$coef[,1],#
car::Anova(M_MMI_BENT_rep)[,3],#
modsum_XCMGW_rep$coef[,1],#
car::Anova(M_XCMGW_rep)[,3],#
modsum_XFC_NAT_rep$coef[,1],#
car::Anova(M_XFC_NAT_rep)[,3])#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_res<-cbind(modsum_PTL_res$coef[,1],#
car::Anova(M_PTL_res)[,3],#
modsum_NTL_res$coef[,1],#
car::Anova(M_NTL_res)[,3],#
modsum_TURB_res$coef[,1],#
car::Anova(M_TURB_res)[,3],#
modsum_MMI_BENT_res$coef[,1],#
car::Anova(M_MMI_BENT_res)[,3],#
modsum_XCMGW_res$coef[,1],#
car::Anova(M_XCMGW_res)[,3],#
modsum_XFC_NAT_res$coef[,1],#
car::Anova(M_XFC_NAT_res)[,3])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_form<-cbind(modsum_PTL_form$coef[,1],#
car::Anova(M_PTL_form)[,3],#
modsum_NTL_form$coef[,1],#
car::Anova(M_NTL_form)[,3],#
modsum_TURB_form$coef[,1],#
car::Anova(M_TURB_form)[,3],#
modsum_MMI_BENT_form$coef[,1],#
car::Anova(M_MMI_BENT_form)[,3],#
modsum_XCMGW_form$coef[,1],#
car::Anova(M_XCMGW_form)[,3],#
modsum_XFC_NAT_form$coef[,1],#
car::Anova(M_XFC_NAT_form)[,3])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#make csv file that is table of fixed effects from base models#
fix_fun<-cbind(modsum_PTL_fun$coef[,1],#
car::Anova(M_PTL_fun)[,3],#
modsum_NTL_fun$coef[,1],#
car::Anova(M_NTL_fun)[,3],#
modsum_TURB_fun$coef[,1],#
car::Anova(M_TURB_fun)[,3],#
modsum_MMI_BENT_fun$coef[,1],#
car::Anova(M_MMI_BENT_fun)[,3],#
modsum_XCMGW_fun$coef[,1],#
car::Anova(M_XCMGW_fun)[,3],#
modsum_XFC_NAT_fun$coef[,1],#
car::Anova(M_XFC_NAT_fun)[,3])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_10.csv")
modsum_TURB_fun$coef[,1]
car::Anova(M_TURB_fun)[,3]
modsum_TURB_fun
car::Anova(M_TURB_fun)[,3]
car::Anova(M_TURB_fun)
modsum_TURB_fun
modsum_TURB_fun[-2,]
data.frame(modsum_TURB_fun)
data.frame(modsum_TURB_fun$coef)
modsum_TURB_fun$coef[-2,]
modsum_TURB_fun$coef[-3:4,]
modsum_TURB_fun$coef[-(3:5),]
modsum_TURB_fun$coef
modsum_TURB_fun$coef[-(3:8),]#
modsum_TURB_fun$coef
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
length(unique(fdat$HUC4))#
length(unique(fdat$HUC6))#
#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[-(3:8),1],#
car::Anova(M_PTL_base)[,3],#
modsum_NTL_base$coef[-(3:8),1],#
car::Anova(M_NTL_base)[,3],#
modsum_TURB_base$coef[-(3:8),1],#
car::Anova(M_TURB_base)[,3],#
modsum_MMI_BENT_base$coef[-(3:8),1],#
car::Anova(M_MMI_BENT_base)[,3],#
modsum_XCMGW_base$coef[-(3:8),1],#
car::Anova(M_XCMGW_base)[,3],#
modsum_XFC_NAT_base$coef[-(3:8),1],#
car::Anova(M_XFC_NAT_base)[,3])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_rep<-cbind(modsum_PTL_rep$coef[-(3:8),1],#
car::Anova(M_PTL_rep)[,3],#
modsum_NTL_rep$coef[-(3:8),1],#
car::Anova(M_NTL_rep)[,3],#
modsum_TURB_rep$coef[-(3:8),1],#
car::Anova(M_TURB_rep)[,3],#
modsum_MMI_BENT_rep$coef[-(3:8),1],#
car::Anova(M_MMI_BENT_rep)[,3],#
modsum_XCMGW_rep$coef[-(3:8),1],#
car::Anova(M_XCMGW_rep)[,3],#
modsum_XFC_NAT_rep$coef[-(3:8),1],#
car::Anova(M_XFC_NAT_rep)[,3])#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_res<-cbind(modsum_PTL_res$coef[-(3:8),1],#
car::Anova(M_PTL_res)[,3],#
modsum_NTL_res$coef[-(3:8),1],#
car::Anova(M_NTL_res)[,3],#
modsum_TURB_res$coef[-(3:8),1],#
car::Anova(M_TURB_res)[,3],#
modsum_MMI_BENT_res$coef[-(3:8),1],#
car::Anova(M_MMI_BENT_res)[,3],#
modsum_XCMGW_res$coef[-(3:8),1],#
car::Anova(M_XCMGW_res)[,3],#
modsum_XFC_NAT_res$coef[-(3:8),1],#
car::Anova(M_XFC_NAT_res)[,3])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_form<-cbind(modsum_PTL_form$coef[-(3:8),1],#
car::Anova(M_PTL_form)[,3],#
modsum_NTL_form$coef[-(3:8),1],#
car::Anova(M_NTL_form)[,3],#
modsum_TURB_form$coef[-(3:8),1],#
car::Anova(M_TURB_form)[,3],#
modsum_MMI_BENT_form$coef[-(3:8),1],#
car::Anova(M_MMI_BENT_form)[,3],#
modsum_XCMGW_form$coef[-(3:8),1],#
car::Anova(M_XCMGW_form)[,3],#
modsum_XFC_NAT_form$coef[-(3:8),1],#
car::Anova(M_XFC_NAT_form)[,3])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#make csv file that is table of fixed effects from base models#
fix_fun<-cbind(modsum_PTL_fun$coef[-(3:8),1],#
car::Anova(M_PTL_fun)[,3],#
modsum_NTL_fun$coef[-(3:8),1],#
car::Anova(M_NTL_fun)[,3],#
modsum_TURB_fun$coef[-(3:8),1],#
car::Anova(M_TURB_fun)[,3],#
modsum_MMI_BENT_fun$coef[-(3:8),1],#
car::Anova(M_MMI_BENT_fun)[,3],#
modsum_XCMGW_fun$coef[-(3:8),1],#
car::Anova(M_XCMGW_fun)[,3],#
modsum_XFC_NAT_fun$coef[-(3:8),1],#
car::Anova(M_XFC_NAT_fun)[,3])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_10.csv")
fix_form<-cbind(modsum_PTL_form$coef[-(3:8),1],#
car::Anova(M_PTL_form)[,3],#
modsum_NTL_form$coef[-(3:8),1],#
car::Anova(M_NTL_form)[,3],#
modsum_TURB_form$coef[-(3:8),1],#
car::Anova(M_TURB_form)[,3],#
modsum_MMI_BENT_form$coef[-(3:8),1],#
car::Anova(M_MMI_BENT_form)[,3],#
modsum_XCMGW_form$coef[-(3:8),1],#
car::Anova(M_XCMGW_form)[,3],#
modsum_XFC_NAT_form$coef[-(3:8),1],#
car::Anova(M_XFC_NAT_form)[,3])
car::Anova(M_PTL_form)[,3]
modsum_PTL_form$coef[-(3:8),1]
modsum_PTL_form$coef
car::Anova(M_PTL_form)
make csv file that is table of fixed effects from base models#
fix_fun<-cbind(modsum_PTL_fun$coef[-(3:8),1],#
car::Anova(M_PTL_fun)[,3],#
modsum_NTL_fun$coef[-(3:7),1],#
car::Anova(M_NTL_fun)[,3],#
modsum_TURB_fun$coef[-(3:7),1],#
car::Anova(M_TURB_fun)[,3],#
modsum_MMI_BENT_fun$coef[-(3:7),1],#
car::Anova(M_MMI_BENT_fun)[,3],#
modsum_XCMGW_fun$coef[-(3:7),1],#
car::Anova(M_XCMGW_fun)[,3],#
modsum_XFC_NAT_fun$coef[-(3:7),1],#
car::Anova(M_XFC_NAT_fun)[,3])
make csv file that is table of fixed effects from base models#
fix_fun<-cbind(modsum_PTL_fun$coef[-(3:7),1],#
car::Anova(M_PTL_fun)[,3],#
modsum_NTL_fun$coef[-(3:7),1],#
car::Anova(M_NTL_fun)[,3],#
modsum_TURB_fun$coef[-(3:7),1],#
car::Anova(M_TURB_fun)[,3],#
modsum_MMI_BENT_fun$coef[-(3:7),1],#
car::Anova(M_MMI_BENT_fun)[,3],#
modsum_XCMGW_fun$coef[-(3:7),1],#
car::Anova(M_XCMGW_fun)[,3],#
modsum_XFC_NAT_fun$coef[-(3:7),1],#
car::Anova(M_XFC_NAT_fun)[,3])
car::Anova(M_PTL_fun)
car::Anova(M_PTL_res)
modsum_PTL_fun
modsum_PTL_fun$coef
car::Anova(M_PTL_fun)
modsum_PTL_fun$coef[-c(1,3:8),1]
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[-c(1,3:8),1],#
car::Anova(M_PTL_base)[,3],#
modsum_NTL_base$coef[-c(1,3:8),1],#
car::Anova(M_NTL_base)[,3],#
modsum_TURB_base$coef[-c(1,3:8),1],#
car::Anova(M_TURB_base)[,3],#
modsum_MMI_BENT_base$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_base)[,3],#
modsum_XCMGW_base$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_base)[,3],#
modsum_XFC_NAT_base$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_base)[,3])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#
#DIRECT MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[-c(1,3:8),1],#
car::Anova(M_PTL_base)[,3],#
modsum_NTL_base$coef[-c(1,3:8),1],#
car::Anova(M_NTL_base)[,3],#
modsum_TURB_base$coef[-c(1,3:8),1],#
car::Anova(M_TURB_base)[,3],#
modsum_MMI_BENT_base$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_base)[,3],#
modsum_XCMGW_base$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_base)[,3],#
modsum_XFC_NAT_base$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_base)[,3])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_direct_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_rep<-cbind(modsum_PTL_rep$coef[-c(1,3:8),1],#
car::Anova(M_PTL_rep)[-2,3],#
modsum_NTL_rep$coef[-c(1,3:8),1],#
car::Anova(M_NTL_rep)[-2,3],#
modsum_TURB_rep$coef[-c(1,3:8),1],#
car::Anova(M_TURB_rep)[-2,3],#
modsum_MMI_BENT_rep$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_rep)[-2,3],#
modsum_XCMGW_rep$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_rep)[-2,3],#
modsum_XFC_NAT_rep$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_rep)[-2,3])#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_res<-cbind(modsum_PTL_res$coef[-c(1,3:8),1],#
car::Anova(M_PTL_res)[-2,3],#
modsum_NTL_res$coef[-c(1,3:8),1],#
car::Anova(M_NTL_res)[-2,3],#
modsum_TURB_res$coef[-c(1,3:8),1],#
car::Anova(M_TURB_res)[-2,3],#
modsum_MMI_BENT_res$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_res)[-2,3],#
modsum_XCMGW_res$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_res)[-2,3],#
modsum_XFC_NAT_res$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_res)[-2,3])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:obj_trans+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from base models#
fix_form<-cbind(modsum_PTL_form$coef[-c(1,3:8),1],#
car::Anova(M_PTL_form)[-2,3],#
modsum_NTL_form$coef[-c(1,3:8),1],#
car::Anova(M_NTL_form)[-2,3],#
modsum_TURB_form$coef[-c(1,3:8),1],#
car::Anova(M_TURB_form)[-2,3],#
modsum_MMI_BENT_form$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_form)[-2,3],#
modsum_XCMGW_form$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_form)[-2,3],#
modsum_XFC_NAT_form$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_form)[-2,3])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[-c(1,3:8),1],#
car::Anova(M_PTL_fun)[-2,3],#
modsum_NTL_fun$coef[-c(1,3:8),1],#
car::Anova(M_NTL_fun)[-2,3],#
modsum_TURB_fun$coef[-c(1,3:8),1],#
car::Anova(M_TURB_fun)[-2,3],#
modsum_MMI_BENT_fun$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_fun)[-2,3],#
modsum_XCMGW_fun$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_fun)[-2,3],#
modsum_XFC_NAT_fun$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_fun)[-2,3])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_10.csv")
modsum_PTL_form$coef[-c(1,3:8),1]
car::Anova(M_PTL_form)[-2,3]
car::Anova(M_PTL_form)
modsum_PTL_form$coef
fdat$ojb_trans
fdat$obj_trans
1:7
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[-c(1:7),1],#
car::Anova(M_PTL_base)[,3],#
modsum_NTL_base$coef[-c(1:7),1],#
car::Anova(M_NTL_base)[,3],#
modsum_TURB_base$coef[-c(1:7),1],#
car::Anova(M_TURB_base)[,3],#
modsum_MMI_BENT_base$coef[-c(1:7),1],#
car::Anova(M_MMI_BENT_base)[,3],#
modsum_XCMGW_base$coef[-c(1:7),1],#
car::Anova(M_XCMGW_base)[,3],#
modsum_XFC_NAT_base$coef[-c(1:7),1],#
car::Anova(M_XFC_NAT_base)[,3])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#
#DIRECT MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_10.csv")#
modsum_NTL_base#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[-c(1,3:8),1],#
car::Anova(M_PTL_base)[,3],#
modsum_NTL_base$coef[-c(1,3:8),1],#
car::Anova(M_NTL_base)[,3],#
modsum_TURB_base$coef[-c(1,3:8),1],#
car::Anova(M_TURB_base)[,3],#
modsum_MMI_BENT_base$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_base)[,3],#
modsum_XCMGW_base$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_base)[,3],#
modsum_XFC_NAT_base$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_base)[,3])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_direct_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_rep<-cbind(modsum_PTL_rep$coef[-c(1,3:8),1],#
car::Anova(M_PTL_rep)[-2,3],#
modsum_NTL_rep$coef[-c(1,3:8),1],#
car::Anova(M_NTL_rep)[-2,3],#
modsum_TURB_rep$coef[-c(1,3:8),1],#
car::Anova(M_TURB_rep)[-2,3],#
modsum_MMI_BENT_rep$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_rep)[-2,3],#
modsum_XCMGW_rep$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_rep)[-2,3],#
modsum_XFC_NAT_rep$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_rep)[-2,3])#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:as.factor(GROUP_RESP_null)+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_res<-cbind(modsum_PTL_res$coef[-c(1,3:8),1],#
car::Anova(M_PTL_res)[-2,3],#
modsum_NTL_res$coef[-c(1,3:8),1],#
car::Anova(M_NTL_res)[-2,3],#
modsum_TURB_res$coef[-c(1,3:8),1],#
car::Anova(M_TURB_res)[-2,3],#
modsum_MMI_BENT_res$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_res)[-2,3],#
modsum_XCMGW_res$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_res)[-2,3],#
modsum_XFC_NAT_res$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_res)[-2,3])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from base models#
fix_form<-cbind(#
#
modsum_PTL_form$coef[-c(1,3:8),1],#
car::Anova(M_PTL_form)[-2,3],#
modsum_NTL_form$coef[-c(1,3:8),1],#
car::Anova(M_NTL_form)[-2,3],#
modsum_TURB_form$coef[-c(1,3:8),1],#
car::Anova(M_TURB_form)[-2,3],#
modsum_MMI_BENT_form$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_form)[-2,3],#
modsum_XCMGW_form$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_form)[-2,3],#
modsum_XFC_NAT_form$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_form)[-2,3])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[-c(1,3:8),1],#
car::Anova(M_PTL_fun)[-2,3],#
modsum_NTL_fun$coef[-c(1,3:8),1],#
car::Anova(M_NTL_fun)[-2,3],#
modsum_TURB_fun$coef[-c(1,3:8),1],#
car::Anova(M_TURB_fun)[-2,3],#
modsum_MMI_BENT_fun$coef[-c(1,3:8),1],#
car::Anova(M_MMI_BENT_fun)[-2,3],#
modsum_XCMGW_fun$coef[-c(1,3:8),1],#
car::Anova(M_XCMGW_fun)[-2,3],#
modsum_XFC_NAT_fun$coef[-c(1,3:8),1],#
car::Anova(M_XFC_NAT_fun)[-2,3])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_10.csv")
car::Anova(M_PTL_res)#
modsum_PTL_res$coef
fdat$GROUP_RESP_null
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_10.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_10.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_10.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_10.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
fix_form<-cbind(#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_10.csv")
CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+5#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=5,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_5.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_5.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_5.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_5.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_5.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_5.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_5.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_5.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_5.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_5.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_5.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_5.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_5.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_5.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_5.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_5.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_5.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_5.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_5.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_5.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_5.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_5.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_5.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_5.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_5.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_5.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_5.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_5.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_5.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVE<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_D.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_D.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_D.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_D.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_D.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_D.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_D.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_D.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_D.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_D.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_D.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_D.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_D.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_D.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_D.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_D.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_D.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_D.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_D.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_D.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_D.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_D.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_D.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_D.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_D.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_D.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_D.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_D.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_D.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_D.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+5#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=5,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_5.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_5.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_5.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_5.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_5.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_5.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_5.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_5.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_5.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_5.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_5.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_5.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_5.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_5.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_5.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_5.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_5.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_5.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_5.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_5.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_5.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_5.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_5.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_5.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_5.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_5.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_5.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_5.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_5.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+0#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=0,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_5.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_5.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_5.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_5.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_5.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_5.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_5.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_5.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_5.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_5.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_5.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_5.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_5.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_5.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_5.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_5.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_5.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_5.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_5.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_5.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_5.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_5.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_5.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_5.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_5.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_5.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_5.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_5.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_5.csv")
getwd()
rm(list=ls())
setwd("/Users/TScott/Google Drive/duckabush")
list.files()
grep("fixef",list.files())
list.files()[grep("fixef",list.files())]
temp<-list.files()[grep("fixef",list.files())]
temp
temp[grep("base",temp)]
rm(list=ls())#
setwd("/Users/TScott/Google Drive/duckabush")#
temp<-list.files()[grep("fixef",list.files())]#
#
temp[grep("base",temp)]
rm(list=ls())#
setwd("/Users/TScott/Google Drive/duckabush")#
temp<-list.files()[grep("fixef",list.files())]#
#
temp[grep("base",temp)]
temp1<-temp[grep("base",temp)]
for (i in 1:length(temp1))#
{#
	head(read.csv(temp1[i]))#
}
for (i in 1:length(temp1))#
{#
	print(head(read.csv(temp1[i])))#
}
library(stargazer)
?stargazer
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+0#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=0,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_5.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_5.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_5.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_5.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])
stargazer(M_PTL_base,M_NTL_base)
stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base)
write.table(stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base,file="//Users/TScott/Google Drive/duckabush/latextable_base")
)
write.table(stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base,file="//Users/TScott/Google Drive/duckabush/latextable_base"))
write.table(stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base),file="//Users/TScott/Google Drive/duckabush/latextable_base")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+0#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=0,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_0.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_0.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_0.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_0.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
write.table(stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base),file="//Users/TScott/Google Drive/duckabush/latextable_base")#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_0.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_0.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_0.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_0.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_0.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_0.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_0.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_0.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_0.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_0.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_0.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_0.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_0.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_0.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_0.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_0.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_0.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_0.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_0.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_0.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_0.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_0.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_0.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_0.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_0.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_0.csv")
stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base)
setwd("//Users/TScott/Google Drive/duckabush")
list.files()
list.files()[grep("fixef",list.files())]
list.files()[grep("fixef",list.files())&grep("direct",list.files())]
list.files()[grep("fixef",list.files())]
f<-list.files()[grep("fixef",list.files())]
f1<-f[grep("direct",f)]
f1
setwd("//Users/TScott/Google Drive/duckabush")#
f<-list.files()[grep("dir_",list.files())]
f
read.csv(f[1])
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM0_lag<-fdat$GROUP_FORM+0#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM0_lag)&fdat$GROUP_FORM0_lag!=0,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM0_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM0_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM0_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM0_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM0_OBJECT<-FORM0_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM0_TOTAL variable#
fdat$MEM0_TRIBE<-ifelse(is.na(fdat$MEM0_TRIBE)==TRUE,0,ifelse(fdat$MEM0_TRIBE=="0",0,1))#
fdat$MEM0_STAKE<-ifelse(is.na(fdat$MEM0_STAKE)==TRUE,0,ifelse(fdat$MEM0_STAKE=="0",0,1))#
fdat$MEM0_NGO<-ifelse(is.na(fdat$MEM0_NGO)==TRUE,0,ifelse(fdat$MEM0_NGO=="0",0,1))#
fdat$MEM0_STATE<-ifelse(is.na(fdat$MEM0_STATE)==TRUE,0,ifelse(fdat$MEM0_STATE=="0",0,1))#
fdat$MEM0_FED<-ifelse(is.na(fdat$MEM0_FED)==TRUE,0,ifelse(fdat$MEM0_FED=="0",0,1))#
fdat$MEM0_BUS<-ifelse(is.na(fdat$MEM0_BUS)==TRUE,0,ifelse(fdat$MEM0_BUS=="0",0,1))#
fdat$MEM0_AG<-ifelse(is.na(fdat$MEM0_AG)==TRUE,0,ifelse(fdat$MEM0_AG=="0",0,1))#
fdat$MEM0_UNIV<-ifelse(is.na(fdat$MEM0_UNIV)==TRUE,0,ifelse(fdat$MEM0_UNIV=="0",0,1))#
#
fdat$MEM0_TOTAL<-fdat$MEM0_TRIBE+fdat$MEM0_STAKE+fdat$MEM0_NGO+fdat$MEM0_STATE+fdat$MEM0_FED+fdat$MEM0_BUS+fdat$MEM0_AG+fdat$MEM0_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM0_OBJECT_num<-ifelse(fdat$FORM0_OBJECT=="0",0,ifelse(fdat$FORM0_OBJECT=="MISSION",1,ifelse(fdat$FORM0_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M0_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M0_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_0.csv")#
#
M0_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M0_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_0.csv")#
#
M0_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M0_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_0.csv")#
#
M0_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M0_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M0_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M0_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M0_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M0_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_0.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M0_PTL_base)[-grep("YEAR",rownames(car::Anova(M0_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M0_NTL_base)[-grep("YEAR",rownames(car::Anova(M0_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M0_TURB_base)[-grep("YEAR",rownames(car::Anova(M0_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M0_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M0_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M0_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M0_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M0_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M0_NTL_base))),])#
#
stargazer(M0_PTL_base,M0_NTL_base,M0_TURB_base,M0_MMI_BENT_base,M0_XCMGW_base,M0_XFC_NAT_base)#
#
write.table(stargazer(M0_PTL_base,M0_NTL_base,M0_TURB_base,M0_MMI_BENT_base,M0_XCMGW_base,M0_XFC_NAT_base),file="//Users/TScott/Google Drive/duckabush/latextable_base")#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_0.csv")#
#
#DIRECT MODELS#
M0_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M0_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_0.csv")#
#
M0_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M0_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_0.csv")#
modsum_NTL_direct#
M0_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M0_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_0.csv")#
#
M0_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M0_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M0_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M0_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M0_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M0_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_0.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M0_PTL_direct)[-grep("YEAR",rownames(car::Anova(M0_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M0_NTL_direct)[-grep("YEAR",rownames(car::Anova(M0_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M0_TURB_direct)[-grep("YEAR",rownames(car::Anova(M0_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M0_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M0_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M0_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M0_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M0_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M0_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_0.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M0_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM0_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M0_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_0.csv")#
M0_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM0_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M0_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_0.csv")#
#
M0_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM0_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M0_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_0.csv")#
#
M0_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM0_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M0_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M0_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM0_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M0_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M0_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM0_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M0_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_0.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M0_PTL_rep)[-grep("YEAR",rownames(car::Anova(M0_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M0_NTL_rep)[-grep("YEAR",rownames(car::Anova(M0_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M0_TURB_rep)[-grep("YEAR",rownames(car::Anova(M0_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M0_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M0_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M0_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M0_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M0_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M0_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_0.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M0_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M0_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_0.csv")#
#
M0_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M0_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_0.csv")#
#
M0_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M0_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_0.csv")#
#
M0_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M0_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M0_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M0_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M0_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M0_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_0.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M0_PTL_res)[-grep("YEAR",rownames(car::Anova(M0_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M0_NTL_res)[-grep("YEAR",rownames(car::Anova(M0_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M0_TURB_res)[-grep("YEAR",rownames(car::Anova(M0_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M0_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M0_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M0_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M0_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M0_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M0_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_0.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM0_OBJECT=="0","MISSION",fdat$FORM0_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M0_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M0_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_0.csv")#
M0_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M0_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_0.csv")#
#
M0_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M0_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_0.csv")#
#
M0_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M0_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M0_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M0_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M0_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M0_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_0.csv")#
car::Anova(M0_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M0_PTL_form)[-grep("YEAR",rownames(car::Anova(M0_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M0_NTL_form)[-grep("YEAR",rownames(car::Anova(M0_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M0_TURB_form)[-grep("YEAR",rownames(car::Anova(M0_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M0_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M0_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M0_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M0_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M0_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M0_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_0.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M0_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M0_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_0.csv")#
M0_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M0_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_0.csv")#
#
M0_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M0_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_0.csv")#
#
M0_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M0_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M0_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M0_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M0_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M0_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M0_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_0.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M0_PTL_fun)[-grep("YEAR",rownames(car::Anova(M0_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M0_NTL_fun)[-grep("YEAR",rownames(car::Anova(M0_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M0_TURB_fun)[-grep("YEAR",rownames(car::Anova(M0_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M0_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M0_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M0_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M0_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M0_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M0_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_0.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE AT TIME OF SAMPLING?#
#"ACTIVE_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+0#
fdat$ACTIVE_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=0,1,0)#
fdat$ACTIVE<-fdat$ACTIVE_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_0.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_0.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_0.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_0.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
#
stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base)#
#
write.table(stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base),file="//Users/TScott/Google Drive/duckabush/latextable_base")#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_0.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_0.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_0.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_0.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_0.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_0.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_0.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_0.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_0.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_0.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_0.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_0.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_0.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_0.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:PLAN+#
ACTIVE:MANAGE+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_0.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_0.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_0.csv")#
M_NTL_form <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_0.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_0.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FACILITATE+#
ACTIVE:GOALS+#
ACTIVE:OBJECTIVES+#
ACTIVE:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_0.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_0.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_0.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_0.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_0.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE:FUND_LOCAL+#
ACTIVE:FUND_STATE+#
ACTIVE:FUND_FED+#
(1|HUC4)+(ACTIVE|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_0.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_0.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_5.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_5.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_5.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_5.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_5.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_5.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_5.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_5.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_5.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_5.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_5.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_5.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_5.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_5.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_5.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_5.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_5.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_5.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_5.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_5.csv")#
M_NTL_form <- lmer(NTL~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_5.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_5.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_5.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_5.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_5.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_5.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_5.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_5.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_5.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE0?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_0.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_0.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_0.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_0.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
#
stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base)#
#
write.table(stargazer(M_PTL_base,M_NTL_base,M_TURB_base,M_MMI_BENT_base,M_XCMGW_base,M_XFC_NAT_base),file="//Users/TScott/Google Drive/duckabush/latextable_base")#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_0.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_0.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_0.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_0.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_0.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_0.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_0.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_0.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_0.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_0.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_0.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_0.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_0.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_0.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_0.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_0.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_0.csv")#
M_NTL_form <- lmer(NTL~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_0.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_0.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_0.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_0.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_0.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_0.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_0.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_0.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_0.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag)&fdat$GROUP_FORM_lag!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE10?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#BASE MODELS#
M_PTL_base <- lmer(PTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_base<-summary(M_PTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_base)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_10.csv")#
#
M_NTL_base <- lmer(NTL~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_base<-summary(M_NTL_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_base)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_10.csv")#
#
M_TURB_base <- lmer(TURB~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_base<-summary(M_TURB_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_base)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_10.csv")#
#
M_XFC_NAT_base <- lmer(XFC_NAT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_base<-summary(M_XFC_NAT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_base)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_base <- lmer(MMI_BENT~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_base<-summary(M_MMI_BENT_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_base)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_base <- lmer(XCMGW~XWIDTH+XELEV+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(1|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_base<-summary(M_XCMGW_base,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_base)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_10.csv")#
#
#make csv file that is table of fixed effects from base models#
fix_base<-cbind(modsum_PTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_PTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_NTL_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_NTL_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_TURB_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_TURB_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_MMI_BENT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_MMI_BENT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XCMGW_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XCMGW_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),],#
modsum_XFC_NAT_base$coef[c(-grep("YEAR",rownames(modsum_NTL_base$coef)),-grep("Intercept",rownames(modsum_NTL_base$coef))),],#
car::Anova(M_XFC_NAT_base)[-grep("YEAR",rownames(car::Anova(M_NTL_base))),])#
colnames(fix_base)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_base, "//Users/TScott/Google Drive/duckabush/fixef_base_10.csv")#
#
#DIRECT MODELS#
M_PTL_direct <- lmer(PTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct<-summary(M_PTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_10.csv")#
#
M_NTL_direct <- lmer(NTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct<-summary(M_NTL_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_10.csv")#
modsum_NTL_direct#
M_TURB_direct <- lmer(TURB~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct<-summary(M_TURB_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_10.csv")#
#
M_XFC_NAT_direct <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct<-summary(M_XFC_NAT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct<-summary(M_MMI_BENT_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct<-summary(M_XCMGW_direct,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_10.csv")#
#
#make csv file that is table of fixed effects from direct models#
#make csv file that is table of fixed effects from direct models#
fix_direct<-cbind(modsum_PTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_PTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_NTL_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_NTL_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_TURB_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_TURB_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_MMI_BENT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_MMI_BENT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XCMGW_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XCMGW_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),],#
modsum_XFC_NAT_direct$coef[c(-grep("YEAR",rownames(modsum_NTL_direct$coef)),-grep("Intercept",rownames(modsum_NTL_direct$coef))),],#
car::Anova(M_XFC_NAT_direct)[-grep("YEAR",rownames(car::Anova(M_NTL_direct))),])#
#
colnames(fix_direct)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct, "//Users/TScott/Google Drive/duckabush/fixef_direct_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_rep <- lmer(PTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep<-summary(M_PTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep <- lmer(NTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep<-summary(M_NTL_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep <- lmer(TURB~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep<-summary(M_TURB_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep<-summary(M_XFC_NAT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep<-summary(M_MMI_BENT_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep<-summary(M_XCMGW_rep,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY#
M_PTL_res <- lmer(PTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res<-summary(M_PTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res_10.csv")#
#
M_NTL_res <- lmer(NTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res<-summary(M_NTL_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res_10.csv")#
#
M_TURB_res <- lmer(TURB~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res<-summary(M_TURB_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res_10.csv")#
#
M_XFC_NAT_res <- lmer(XFC_NAT~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res<-summary(M_XFC_NAT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res<-summary(M_MMI_BENT_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res <- lmer(XCMGW~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res<-summary(M_XCMGW_res,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res_10.csv")#
#
#make csv file that is table of fixed effects from res models#
fix_res<-cbind(modsum_PTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_PTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_NTL_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_NTL_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_TURB_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_TURB_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_MMI_BENT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_MMI_BENT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XCMGW_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XCMGW_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),],#
modsum_XFC_NAT_res$coef[c(-grep("YEAR",rownames(modsum_NTL_res$coef)),-grep("Intercept",rownames(modsum_NTL_res$coef))),],#
car::Anova(M_XFC_NAT_res)[-grep("YEAR",rownames(car::Anova(M_NTL_res))),])#
colnames(fix_res)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res, "//Users/TScott/Google Drive/duckabush/fixef_res_10.csv")#
#CREATE GROUP FORMALITY MODELS#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#UN-RESTRICTED MODELS: FORMALIZATION#
M_PTL_form <- lmer(PTL~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form<-summary(M_PTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
M_NTL_form <- lmer(NTL~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form<-summary(M_NTL_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form <- lmer(TURB~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form<-summary(M_TURB_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form <- lmer(XFC_NAT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form<-summary(M_XFC_NAT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form<-summary(M_MMI_BENT_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form <- lmer(XCMGW~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form<-summary(M_XCMGW_form,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
car::Anova(M_PTL_form)#
modsum_PTL_form$coef#
#make csv file that is table of fixed effects from direct models#
#
fix_form<-cbind(modsum_PTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_PTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_NTL_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_NTL_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_TURB_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_TURB_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_MMI_BENT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_MMI_BENT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XCMGW_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XCMGW_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),],#
modsum_XFC_NAT_form$coef[c(-grep("YEAR",rownames(modsum_NTL_form$coef)),-grep("Intercept",rownames(modsum_NTL_form$coef))),],#
car::Anova(M_XFC_NAT_form)[-grep("YEAR",rownames(car::Anova(M_NTL_form))),])#
colnames(fix_form)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#
#UN-RESTRICTED MODELS: FUNDING#
M_PTL_fun <- lmer(PTL~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fun<-summary(M_PTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fun_10.csv")#
M_NTL_fun <- lmer(NTL~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fun<-summary(M_NTL_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fun)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fun_10.csv")#
#
M_TURB_fun <- lmer(TURB~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fun<-summary(M_TURB_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fun)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fun_10.csv")#
#
M_XFC_NAT_fun <- lmer(XFC_NAT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fun<-summary(M_XFC_NAT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fun)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fun_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fun <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fun<-summary(M_MMI_BENT_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fun)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fun_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fun <- lmer(XCMGW~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fun<-summary(M_XCMGW_fun,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fun)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fun_10.csv")#
#make csv file that is table of fixed effects from funding models#
fix_fun<-cbind(modsum_PTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_PTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_NTL_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_NTL_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_TURB_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_TURB_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_MMI_BENT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_MMI_BENT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XCMGW_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XCMGW_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),],#
modsum_XFC_NAT_fun$coef[c(-grep("YEAR",rownames(modsum_NTL_fun$coef)),-grep("Intercept",rownames(modsum_NTL_fun$coef))),],#
car::Anova(M_XFC_NAT_fun)[-grep("YEAR",rownames(car::Anova(M_NTL_fun))),])#
colnames(fix_fun)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fun, "//Users/TScott/Google Drive/duckabush/fixef_fun_10.csv")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
#DIRECT MODELS#
#
#DIRECT MODELS#
M_PTL_direct0 <- lmer(PTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct0<-summary(M_PTL_direct0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_0.csv")#
#
M_NTL_direct0 <- lmer(NTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct0<-summary(M_NTL_direct0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_0.csv")#
modsum_NTL_direct0#
M_TURB_direct0 <- lmer(TURB~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct0<-summary(M_TURB_direct0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_0.csv")#
#
M_XFC_NAT_direct0 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct0<-summary(M_XFC_NAT_direct0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct0 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct0<-summary(M_MMI_BENT_direct0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct0 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE0|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct0<-summary(M_XCMGW_direct0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_0.csv")#
#
#make csv file that is table of fixed effects from direct0 models#
#make csv file that is table of fixed effects from direct0 models#
fix_direct0<-cbind(modsum_PTL_direct0$coef[c(-grep("YEAR",rownames(modsum_NTL_direct0$coef)),-grep("Intercept",rownames(modsum_NTL_direct0$coef))),],#
car::Anova(M_PTL_direct0)[-grep("YEAR",rownames(car::Anova(M_NTL_direct0))),],#
modsum_NTL_direct0$coef[c(-grep("YEAR",rownames(modsum_NTL_direct0$coef)),-grep("Intercept",rownames(modsum_NTL_direct0$coef))),],#
car::Anova(M_NTL_direct0)[-grep("YEAR",rownames(car::Anova(M_NTL_direct0))),],#
modsum_TURB_direct0$coef[c(-grep("YEAR",rownames(modsum_NTL_direct0$coef)),-grep("Intercept",rownames(modsum_NTL_direct0$coef))),],#
car::Anova(M_TURB_direct0)[-grep("YEAR",rownames(car::Anova(M_NTL_direct0))),],#
modsum_MMI_BENT_direct0$coef[c(-grep("YEAR",rownames(modsum_NTL_direct0$coef)),-grep("Intercept",rownames(modsum_NTL_direct0$coef))),],#
car::Anova(M_MMI_BENT_direct0)[-grep("YEAR",rownames(car::Anova(M_NTL_direct0))),],#
modsum_XCMGW_direct0$coef[c(-grep("YEAR",rownames(modsum_NTL_direct0$coef)),-grep("Intercept",rownames(modsum_NTL_direct0$coef))),],#
car::Anova(M_XCMGW_direct0)[-grep("YEAR",rownames(car::Anova(M_NTL_direct0))),],#
modsum_XFC_NAT_direct0$coef[c(-grep("YEAR",rownames(modsum_NTL_direct0$coef)),-grep("Intercept",rownames(modsum_NTL_direct0$coef))),],#
car::Anova(M_XFC_NAT_direct0)[-grep("YEAR",rownames(car::Anova(M_NTL_direct0))),])#
#
colnames(fix_direct0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct0, "//Users/TScott/Google Drive/duckabush/fixef_direct0_0.csv")#
#DIRECT MODELS#
M_PTL_direct5 <- lmer(PTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct5<-summary(M_PTL_direct5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_5.csv")#
#
M_NTL_direct5 <- lmer(NTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct5<-summary(M_NTL_direct5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_5.csv")#
modsum_NTL_direct5#
M_TURB_direct5 <- lmer(TURB~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct5<-summary(M_TURB_direct5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_5.csv")#
#
M_XFC_NAT_direct5 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct5<-summary(M_XFC_NAT_direct5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct5 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct5<-summary(M_MMI_BENT_direct5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct5 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE5|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct5<-summary(M_XCMGW_direct5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_5.csv")#
#
#make csv file that is table of fixed effects from direct5 models#
#make csv file that is table of fixed effects from direct5 models#
fix_direct5<-cbind(modsum_PTL_direct5$coef[c(-grep("YEAR",rownames(modsum_NTL_direct5$coef)),-grep("Intercept",rownames(modsum_NTL_direct5$coef))),],#
car::Anova(M_PTL_direct5)[-grep("YEAR",rownames(car::Anova(M_NTL_direct5))),],#
modsum_NTL_direct5$coef[c(-grep("YEAR",rownames(modsum_NTL_direct5$coef)),-grep("Intercept",rownames(modsum_NTL_direct5$coef))),],#
car::Anova(M_NTL_direct5)[-grep("YEAR",rownames(car::Anova(M_NTL_direct5))),],#
modsum_TURB_direct5$coef[c(-grep("YEAR",rownames(modsum_NTL_direct5$coef)),-grep("Intercept",rownames(modsum_NTL_direct5$coef))),],#
car::Anova(M_TURB_direct5)[-grep("YEAR",rownames(car::Anova(M_NTL_direct5))),],#
modsum_MMI_BENT_direct5$coef[c(-grep("YEAR",rownames(modsum_NTL_direct5$coef)),-grep("Intercept",rownames(modsum_NTL_direct5$coef))),],#
car::Anova(M_MMI_BENT_direct5)[-grep("YEAR",rownames(car::Anova(M_NTL_direct5))),],#
modsum_XCMGW_direct5$coef[c(-grep("YEAR",rownames(modsum_NTL_direct5$coef)),-grep("Intercept",rownames(modsum_NTL_direct5$coef))),],#
car::Anova(M_XCMGW_direct5)[-grep("YEAR",rownames(car::Anova(M_NTL_direct5))),],#
modsum_XFC_NAT_direct5$coef[c(-grep("YEAR",rownames(modsum_NTL_direct5$coef)),-grep("Intercept",rownames(modsum_NTL_direct5$coef))),],#
car::Anova(M_XFC_NAT_direct5)[-grep("YEAR",rownames(car::Anova(M_NTL_direct5))),])#
#
colnames(fix_direct5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct5, "//Users/TScott/Google Drive/duckabush/fixef_direct5_5.csv")#
#DIRECT MODELS#
M_PTL_direct10 <- lmer(PTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_direct10<-summary(M_PTL_direct10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_direct10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_10.csv")#
#
M_NTL_direct10 <- lmer(NTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_direct10<-summary(M_NTL_direct10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_direct10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_10.csv")#
modsum_NTL_direct10#
M_TURB_direct10 <- lmer(TURB~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_direct10<-summary(M_TURB_direct10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_direct10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_10.csv")#
#
M_XFC_NAT_direct10 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_direct10<-summary(M_XFC_NAT_direct10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_direct10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_direct10 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_direct10<-summary(M_MMI_BENT_direct10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_direct10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_direct10 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVE10|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_direct10<-summary(M_XCMGW_direct10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_direct10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_10.csv")#
#
#make csv file that is table of fixed effects from direct10 models#
#make csv file that is table of fixed effects from direct10 models#
fix_direct10<-cbind(modsum_PTL_direct10$coef[c(-grep("YEAR",rownames(modsum_NTL_direct10$coef)),-grep("Intercept",rownames(modsum_NTL_direct10$coef))),],#
car::Anova(M_PTL_direct10)[-grep("YEAR",rownames(car::Anova(M_NTL_direct10))),],#
modsum_NTL_direct10$coef[c(-grep("YEAR",rownames(modsum_NTL_direct10$coef)),-grep("Intercept",rownames(modsum_NTL_direct10$coef))),],#
car::Anova(M_NTL_direct10)[-grep("YEAR",rownames(car::Anova(M_NTL_direct10))),],#
modsum_TURB_direct10$coef[c(-grep("YEAR",rownames(modsum_NTL_direct10$coef)),-grep("Intercept",rownames(modsum_NTL_direct10$coef))),],#
car::Anova(M_TURB_direct10)[-grep("YEAR",rownames(car::Anova(M_NTL_direct10))),],#
modsum_MMI_BENT_direct10$coef[c(-grep("YEAR",rownames(modsum_NTL_direct10$coef)),-grep("Intercept",rownames(modsum_NTL_direct10$coef))),],#
car::Anova(M_MMI_BENT_direct10)[-grep("YEAR",rownames(car::Anova(M_NTL_direct10))),],#
modsum_XCMGW_direct10$coef[c(-grep("YEAR",rownames(modsum_NTL_direct10$coef)),-grep("Intercept",rownames(modsum_NTL_direct10$coef))),],#
car::Anova(M_XCMGW_direct10)[-grep("YEAR",rownames(car::Anova(M_NTL_direct10))),],#
modsum_XFC_NAT_direct10$coef[c(-grep("YEAR",rownames(modsum_NTL_direct10$coef)),-grep("Intercept",rownames(modsum_NTL_direct10$coef))),],#
car::Anova(M_XFC_NAT_direct10)[-grep("YEAR",rownames(car::Anova(M_NTL_direct10))),])#
#
colnames(fix_direct10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_direct10, "//Users/TScott/Google Drive/duckabush/fixef_direct10_10.csv")#
#DIRECT MODELS#
M_PTL_directD <- lmer(PTL~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVED|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_directD<-summary(M_PTL_directD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_directD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_dir_D.csv")#
#
M_NTL_directD <- lmer(NTL~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVED|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_directD<-summary(M_NTL_directD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_directD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_dir_D.csv")#
modsum_NTL_directD#
M_TURB_directD <- lmer(TURB~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVED|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_directD<-summary(M_TURB_directD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_directD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_dir_D.csv")#
#
M_XFC_NAT_directD <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVED|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_directD<-summary(M_XFC_NAT_directD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_directD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_dir_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_directD <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVED|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_directD<-summary(M_MMI_BENT_directD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_directD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_dir_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW_stz)==FALSE)#
M_XCMGW_directD <- lmer(XCMGW~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+(1|HUC4)+(ACTIVED|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_directD<-summary(M_XCMGW_directD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_directD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_dir_D.csv")#
#
#make csv file that is table of fixed effects from directD models#
#make csv file that is table of fixed effects from directD models#
fix_directD<-cbind(modsum_PTL_directD$coef[c(-grep("YEAR",rownames(modsum_NTL_directD$coef)),-grep("Intercept",rownames(modsum_NTL_directD$coef))),],#
car::Anova(M_PTL_directD)[-grep("YEAR",rownames(car::Anova(M_NTL_directD))),],#
modsum_NTL_directD$coef[c(-grep("YEAR",rownames(modsum_NTL_directD$coef)),-grep("Intercept",rownames(modsum_NTL_directD$coef))),],#
car::Anova(M_NTL_directD)[-grep("YEAR",rownames(car::Anova(M_NTL_directD))),],#
modsum_TURB_directD$coef[c(-grep("YEAR",rownames(modsum_NTL_directD$coef)),-grep("Intercept",rownames(modsum_NTL_directD$coef))),],#
car::Anova(M_TURB_directD)[-grep("YEAR",rownames(car::Anova(M_NTL_directD))),],#
modsum_MMI_BENT_directD$coef[c(-grep("YEAR",rownames(modsum_NTL_directD$coef)),-grep("Intercept",rownames(modsum_NTL_directD$coef))),],#
car::Anova(M_MMI_BENT_directD)[-grep("YEAR",rownames(car::Anova(M_NTL_directD))),],#
modsum_XCMGW_directD$coef[c(-grep("YEAR",rownames(modsum_NTL_directD$coef)),-grep("Intercept",rownames(modsum_NTL_directD$coef))),],#
car::Anova(M_XCMGW_directD)[-grep("YEAR",rownames(car::Anova(M_NTL_directD))),],#
modsum_XFC_NAT_directD$coef[c(-grep("YEAR",rownames(modsum_NTL_directD$coef)),-grep("Intercept",rownames(modsum_NTL_directD$coef))),],#
car::Anova(M_XFC_NAT_directD)[-grep("YEAR",rownames(car::Anova(M_NTL_directD))),])#
#
colnames(fix_directD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_directD, "//Users/TScott/Google Drive/duckabush/fixef_directD_D.csv")
ls()
ls()[grep("direct",ls()]
ls()[grep("direct",ls())]
library(stargazer)
f1<-f[grep("10",f)]
f
ff<-ls()[grep("direct",ls())]
ff
f1<-ff[grep("10",ff)]
f1
f1<-ff[grep("10",ff)]
f2<-ff[grep("M_",f1)]
f2
ff<-ls()[grep("_direct",ls())]
ff
f1<-ff[grep("10",ff)]
f1
f2<-ff[grep("M_",f1)]
f2
f1
f2<-f1[grep("modsum",f1,invert=TRUE)]
f2
f3<-f2[grep("fix",f2,invert=TRUE)]
f3
stargazer(f3)
M_TURB_direct10
f3
c(f3)
stargazer(c(f3))
stargazer(unlist(f3))
stargazer(f3[3],f3[2])
stargazer(M_PTL_direct0,M_NTL_direct0)
stargazer(M_PTL_direct0,M_NTL_direct0,M_TURB_direct0,M_MMI_BENT_direct0,M_XCMGW_direct0,M_XFC_NAT_direct0)
write.table(stargazer(M_PTL_direct0,M_NTL_direct0,M_TURB_direct0,M_MMI_BENT_direct0,M_XCMGW_direct0,M_XFC_NAT_direct0),file="//Users/TScott/Google Drive/duckabush/latextable_dir0")#
write.table(stargazer(M_PTL_direct5,M_NTL_direct5,M_TURB_direct5,M_MMI_BENT_direct5,M_XCMGW_direct5,M_XFC_NAT_direct5),file="//Users/TScott/Google Drive/duckabush/latextable_dir5")#
write.table(stargazer(M_PTL_direct10,M_NTL_direct10,M_TURB_direct10,M_MMI_BENT_direct10,M_XCMGW_direct10,M_XFC_NAT_direct10),file="//Users/TScott/Google Drive/duckabush/latextable_dir10")#
write.table(stargazer(M_PTL_directD,M_NTL_directD,M_TURB_directD,M_MMI_BENT_directD,M_XCMGW_directD,M_XFC_NAT_directD),file="//Users/TScott/Google Drive/duckabush/latextable_dirD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#UN-RESTRICTED MODELS: REPRESENTATION 0 lag#
M_PTL_rep0 <- lmer(PTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep0<-summary(M_PTL_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_0.csv")#
M_NTL_rep0 <- lmer(NTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep0<-summary(M_NTL_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_0.csv")#
#
M_TURB_rep0 <- lmer(TURB~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep0<-summary(M_TURB_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_0.csv")#
#
M_XFC_NAT_rep0 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep0<-summary(M_XFC_NAT_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep0 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep0<-summary(M_MMI_BENT_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep0 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep0<-summary(M_XCMGW_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_0.csv")#
#
#make csv file that is table of fixed effects from rep0 models#
#make csv file that is table of fixed effects from rep0 models#
fix_rep0<-cbind(modsum_PTL_rep0$coef[c(-grep0("YEAR",rownames(modsum_NTL_rep0$coef)),-grep0("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_PTL_rep0)[-grep0("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_NTL_rep0$coef[c(-grep0("YEAR",rownames(modsum_NTL_rep0$coef)),-grep0("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_NTL_rep0)[-grep0("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_TURB_rep0$coef[c(-grep0("YEAR",rownames(modsum_NTL_rep0$coef)),-grep0("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_TURB_rep0)[-grep0("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_MMI_BENT_rep0$coef[c(-grep0("YEAR",rownames(modsum_NTL_rep0$coef)),-grep0("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_MMI_BENT_rep0)[-grep0("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_XCMGW_rep0$coef[c(-grep0("YEAR",rownames(modsum_NTL_rep0$coef)),-grep0("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_XCMGW_rep0)[-grep0("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_XFC_NAT_rep0$coef[c(-grep0("YEAR",rownames(modsum_NTL_rep0$coef)),-grep0("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_XFC_NAT_rep0)[-grep0("YEAR",rownames(car::Anova(M_NTL_rep0))),])#
#
colnames(fix_rep0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep0, "//Users/TScott/Google Drive/duckabush/fixef_rep_0.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 5 lag#
M_PTL_rep5 <- lmer(PTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep5<-summary(M_PTL_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_5.csv")#
M_NTL_rep5 <- lmer(NTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep5<-summary(M_NTL_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_5.csv")#
#
M_TURB_rep5 <- lmer(TURB~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep5<-summary(M_TURB_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_5.csv")#
#
M_XFC_NAT_rep5 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep5<-summary(M_XFC_NAT_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep5 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep5<-summary(M_MMI_BENT_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep5 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep5<-summary(M_XCMGW_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_5.csv")#
#
#make csv file that is table of fixed effects from rep models#
#make csv file that is table of fixed effects from rep models#
fix_rep<-cbind(modsum_PTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_PTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_NTL_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_NTL_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_TURB_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_TURB_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_MMI_BENT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_MMI_BENT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XCMGW_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XCMGW_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),],#
modsum_XFC_NAT_rep$coef[c(-grep("YEAR",rownames(modsum_NTL_rep$coef)),-grep("Intercept",rownames(modsum_NTL_rep$coef))),],#
car::Anova(M_XFC_NAT_rep)[-grep("YEAR",rownames(car::Anova(M_NTL_rep))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 10 lag#
M_PTL_rep10 <- lmer(PTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep10<-summary(M_PTL_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep10 <- lmer(NTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep10<-summary(M_NTL_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep10 <- lmer(TURB~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep10<-summary(M_TURB_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep10 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep10<-summary(M_XFC_NAT_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep10 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep10<-summary(M_MMI_BENT_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep10 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep10<-summary(M_XCMGW_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from rep10 models#
#make csv file that is table of fixed effects from rep10 models#
fix_rep10<-cbind(modsum_PTL_rep10$coef[c(-grep10("YEAR",rownames(modsum_NTL_rep10$coef)),-grep10("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_PTL_rep10)[-grep10("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_NTL_rep10$coef[c(-grep10("YEAR",rownames(modsum_NTL_rep10$coef)),-grep10("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_NTL_rep10)[-grep10("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_TURB_rep10$coef[c(-grep10("YEAR",rownames(modsum_NTL_rep10$coef)),-grep10("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_TURB_rep10)[-grep10("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_MMI_BENT_rep10$coef[c(-grep10("YEAR",rownames(modsum_NTL_rep10$coef)),-grep10("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_MMI_BENT_rep10)[-grep10("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_XCMGW_rep10$coef[c(-grep10("YEAR",rownames(modsum_NTL_rep10$coef)),-grep10("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_XCMGW_rep10)[-grep10("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_XFC_NAT_rep10$coef[c(-grep10("YEAR",rownames(modsum_NTL_rep10$coef)),-grep10("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_XFC_NAT_rep10)[-grep10("YEAR",rownames(car::Anova(M_NTL_rep10))),])#
#
colnames(fix_rep10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep10, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_repD <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_repD<-summary(M_PTL_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_repD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_D.csv")#
M_NTL_repD <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_repD<-summary(M_NTL_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_repD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_D.csv")#
#
M_TURB_repD <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_repD<-summary(M_TURB_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_repD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_D.csv")#
#
M_XFC_NAT_repD <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_repD<-summary(M_XFC_NAT_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_repD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_repD <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_repD<-summary(M_MMI_BENT_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_repD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_repD <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_repD<-summary(M_XCMGW_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_repD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_D.csv")#
#
stargazer(M_PTL_rep0,M_NTL_rep0,M_TURB_rep0,M_MMI_BENT_rep0,M_XCMGW_rep0,M_XFC_NAT_rep0)#
stargazer(M_PTL_rep5,M_NTL_rep5,M_TURB_rep5,M_MMI_BENT_rep5,M_XCMGW_rep5,M_XFC_NAT_rep5)#
stargazer(M_PTL_rep10,M_NTL_rep10,M_TURB_rep10,M_MMI_BENT_rep10,M_XCMGW_rep10,M_XFC_NAT_rep10)#
stargazer(M_PTL_repD,M_NTL_repD,M_TURB_repD,M_MMI_BENT_repD,M_XCMGW_repD,M_XFC_NAT_repD)#
#
write.table(stargazer(M_PTL_rep0,M_NTL_rep0,M_TURB_rep0,M_MMI_BENT_rep0,M_XCMGW_rep0,M_XFC_NAT_rep0),file="//Users/TScott/Google Drive/duckabush/latextable_dir0")#
write.table(stargazer(M_PTL_rep5,M_NTL_rep5,M_TURB_rep5,M_MMI_BENT_rep5,M_XCMGW_rep5,M_XFC_NAT_rep5),file="//Users/TScott/Google Drive/duckabush/latextable_dir5")#
write.table(stargazer(M_PTL_rep10,M_NTL_rep10,M_TURB_rep10,M_MMI_BENT_rep10,M_XCMGW_rep10,M_XFC_NAT_rep10),file="//Users/TScott/Google Drive/duckabush/latextable_dir10")#
write.table(stargazer(M_PTL_repD,M_NTL_repD,M_TURB_repD,M_MMI_BENT_repD,M_XCMGW_repD,M_XFC_NAT_repD),file="//Users/TScott/Google Drive/duckabush/latextable_dirD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#UN-RESTRICTED MODELS: REPRESENTATION 0 lag#
M_PTL_rep0 <- lmer(PTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep0<-summary(M_PTL_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_0.csv")#
M_NTL_rep0 <- lmer(NTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep0<-summary(M_NTL_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_0.csv")#
#
M_TURB_rep0 <- lmer(TURB~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep0<-summary(M_TURB_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_0.csv")#
#
M_XFC_NAT_rep0 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep0<-summary(M_XFC_NAT_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep0 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep0<-summary(M_MMI_BENT_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep0 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep0<-summary(M_XCMGW_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_0.csv")#
#
#make csv file that is table of fixed effects from rep0 models#
#make csv file that is table of fixed effects from rep0 models#
fix_rep0<-cbind(modsum_PTL_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_PTL_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_NTL_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_NTL_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_TURB_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_TURB_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_MMI_BENT_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_MMI_BENT_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_XCMGW_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_XCMGW_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_XFC_NAT_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_XFC_NAT_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),])#
#
colnames(fix_rep0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep0, "//Users/TScott/Google Drive/duckabush/fixef_rep_0.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 5 lag#
M_PTL_rep5 <- lmer(PTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep5<-summary(M_PTL_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_5.csv")#
M_NTL_rep5 <- lmer(NTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep5<-summary(M_NTL_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_5.csv")#
#
M_TURB_rep5 <- lmer(TURB~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep5<-summary(M_TURB_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_5.csv")#
#
M_XFC_NAT_rep5 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep5<-summary(M_XFC_NAT_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep5 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep5<-summary(M_MMI_BENT_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep5 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep5<-summary(M_XCMGW_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_5.csv")#
#
#make csv file that is table of fixed effects from rep5 models#
#make csv file that is table of fixed effects from rep5 models#
fix_rep5<-cbind(modsum_PTL_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_PTL_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_NTL_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_NTL_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_TURB_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_TURB_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_MMI_BENT_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_MMI_BENT_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_XCMGW_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_XCMGW_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_XFC_NAT_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_XFC_NAT_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),])#
#
colnames(fix_rep)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep, "//Users/TScott/Google Drive/duckabush/fixef_rep_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 10 lag#
M_PTL_rep10 <- lmer(PTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep10<-summary(M_PTL_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep10 <- lmer(NTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep10<-summary(M_NTL_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep10 <- lmer(TURB~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep10<-summary(M_TURB_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep10 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep10<-summary(M_XFC_NAT_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep10 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep10<-summary(M_MMI_BENT_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep10 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep10<-summary(M_XCMGW_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from rep10 models#
#make csv file that is table of fixed effects from rep10 models#
fix_rep10<-cbind(modsum_PTL_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_PTL_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_NTL_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_NTL_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_TURB_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_TURB_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_MMI_BENT_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_MMI_BENT_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_XCMGW_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_XCMGW_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_XFC_NAT_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_XFC_NAT_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),])#
#
colnames(fix_rep10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep10, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION#
M_PTL_repD <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_repD<-summary(M_PTL_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_repD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_D.csv")#
M_NTL_repD <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_repD<-summary(M_NTL_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_repD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_D.csv")#
#
M_TURB_repD <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_repD<-summary(M_TURB_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_repD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_D.csv")#
#
M_XFC_NAT_repD <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_repD<-summary(M_XFC_NAT_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_repD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_repD <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_repD<-summary(M_MMI_BENT_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_repD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_repD <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_repD<-summary(M_XCMGW_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_repD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_D.csv")#
#
#make csv file that is table of fixed effects from repD models#
#make csv file that is table of fixed effects from repD models#
fix_repD<-cbind(modsum_PTL_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_PTL_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_NTL_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_NTL_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_TURB_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_TURB_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_MMI_BENT_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_MMI_BENT_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_XCMGW_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_XCMGW_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_XFC_NAT_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_XFC_NAT_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),])#
#
colnames(fix_repD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_repD, "//Users/TScott/Google Drive/duckabush/fixef_rep_D.csv")#
stargazer(M_PTL_rep0,M_NTL_rep0,M_TURB_rep0,M_MMI_BENT_rep0,M_XCMGW_rep0,M_XFC_NAT_rep0)#
stargazer(M_PTL_rep5,M_NTL_rep5,M_TURB_rep5,M_MMI_BENT_rep5,M_XCMGW_rep5,M_XFC_NAT_rep5)#
stargazer(M_PTL_rep10,M_NTL_rep10,M_TURB_rep10,M_MMI_BENT_rep10,M_XCMGW_rep10,M_XFC_NAT_rep10)#
stargazer(M_PTL_repD,M_NTL_repD,M_TURB_repD,M_MMI_BENT_repD,M_XCMGW_repD,M_XFC_NAT_repD)#
#
write.table(stargazer(M_PTL_rep0,M_NTL_rep0,M_TURB_rep0,M_MMI_BENT_rep0,M_XCMGW_rep0,M_XFC_NAT_rep0),file="//Users/TScott/Google Drive/duckabush/latextable_dir0")#
write.table(stargazer(M_PTL_rep5,M_NTL_rep5,M_TURB_rep5,M_MMI_BENT_rep5,M_XCMGW_rep5,M_XFC_NAT_rep5),file="//Users/TScott/Google Drive/duckabush/latextable_dir5")#
write.table(stargazer(M_PTL_rep10,M_NTL_rep10,M_TURB_rep10,M_MMI_BENT_rep10,M_XCMGW_rep10,M_XFC_NAT_rep10),file="//Users/TScott/Google Drive/duckabush/latextable_dir10")#
write.table(stargazer(M_PTL_repD,M_NTL_repD,M_TURB_repD,M_MMI_BENT_repD,M_XCMGW_repD,M_XFC_NAT_repD),file="//Users/TScott/Google Drive/duckabush/latextable_dirD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#UN-RESTRICTED MODELS: REPRESENTATION 0 lag#
M_PTL_rep0 <- lmer(PTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep0<-summary(M_PTL_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_0.csv")#
M_NTL_rep0 <- lmer(NTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep0<-summary(M_NTL_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_0.csv")#
#
M_TURB_rep0 <- lmer(TURB~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep0<-summary(M_TURB_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_0.csv")#
#
M_XFC_NAT_rep0 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep0<-summary(M_XFC_NAT_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep0 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep0<-summary(M_MMI_BENT_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep0 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep0<-summary(M_XCMGW_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_0.csv")#
#
#make csv file that is table of fixed effects from rep0 models#
#make csv file that is table of fixed effects from rep0 models#
fix_rep0<-cbind(modsum_PTL_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_PTL_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_NTL_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_NTL_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_TURB_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_TURB_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_MMI_BENT_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_MMI_BENT_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_XCMGW_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_XCMGW_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_XFC_NAT_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_XFC_NAT_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),])#
#
colnames(fix_rep0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep0, "//Users/TScott/Google Drive/duckabush/fixef_rep_0.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 5 lag#
M_PTL_rep5 <- lmer(PTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep5<-summary(M_PTL_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_5.csv")#
M_NTL_rep5 <- lmer(NTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep5<-summary(M_NTL_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_5.csv")#
#
M_TURB_rep5 <- lmer(TURB~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep5<-summary(M_TURB_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_5.csv")#
#
M_XFC_NAT_rep5 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep5<-summary(M_XFC_NAT_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep5 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep5<-summary(M_MMI_BENT_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep5 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep5<-summary(M_XCMGW_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_5.csv")#
#
#make csv file that is table of fixed effects from rep5 models#
#make csv file that is table of fixed effects from rep5 models#
fix_rep5<-cbind(modsum_PTL_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_PTL_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_NTL_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_NTL_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_TURB_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_TURB_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_MMI_BENT_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_MMI_BENT_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_XCMGW_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_XCMGW_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_XFC_NAT_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_XFC_NAT_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),])#
#
colnames(fix_rep5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep5, "//Users/TScott/Google Drive/duckabush/fixef_rep_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 10 lag#
M_PTL_rep10 <- lmer(PTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep10<-summary(M_PTL_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep10 <- lmer(NTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep10<-summary(M_NTL_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep10 <- lmer(TURB~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep10<-summary(M_TURB_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep10 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep10<-summary(M_XFC_NAT_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep10 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep10<-summary(M_MMI_BENT_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep10 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep10<-summary(M_XCMGW_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from rep10 models#
#make csv file that is table of fixed effects from rep10 models#
fix_rep10<-cbind(modsum_PTL_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_PTL_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_NTL_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_NTL_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_TURB_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_TURB_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_MMI_BENT_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_MMI_BENT_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_XCMGW_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_XCMGW_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_XFC_NAT_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_XFC_NAT_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),])#
#
colnames(fix_rep10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep10, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION Duration#
M_PTL_repD <- lmer(PTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_repD<-summary(M_PTL_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_repD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_D.csv")#
M_NTL_repD <- lmer(NTL~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_repD<-summary(M_NTL_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_repD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_D.csv")#
#
M_TURB_repD <- lmer(TURB~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_repD<-summary(M_TURB_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_repD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_D.csv")#
#
M_XFC_NAT_repD <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_repD<-summary(M_XFC_NAT_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_repD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_repD <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_repD<-summary(M_MMI_BENT_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_repD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_repD <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE:CROSS_BOUND:TRANS_BOUND+ACTIVE:MEM_TOTAL+#
TECH_BODY:ACTIVE+(1|HUC4)+(ACTIVE|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_repD<-summary(M_XCMGW_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_repD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_D.csv")#
#
#make csv file that is table of fixed effects from repD models#
#make csv file that is table of fixed effects from repD models#
fix_repD<-cbind(modsum_PTL_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_PTL_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_NTL_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_NTL_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_TURB_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_TURB_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_MMI_BENT_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_MMI_BENT_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_XCMGW_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_XCMGW_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_XFC_NAT_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_XFC_NAT_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),])#
#
colnames(fix_repD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_repD, "//Users/TScott/Google Drive/duckabush/fixef_rep_D.csv")#
stargazer(M_PTL_rep0,M_NTL_rep0,M_TURB_rep0,M_MMI_BENT_rep0,M_XCMGW_rep0,M_XFC_NAT_rep0)#
stargazer(M_PTL_rep5,M_NTL_rep5,M_TURB_rep5,M_MMI_BENT_rep5,M_XCMGW_rep5,M_XFC_NAT_rep5)#
stargazer(M_PTL_rep10,M_NTL_rep10,M_TURB_rep10,M_MMI_BENT_rep10,M_XCMGW_rep10,M_XFC_NAT_rep10)#
stargazer(M_PTL_repD,M_NTL_repD,M_TURB_repD,M_MMI_BENT_repD,M_XCMGW_repD,M_XFC_NAT_repD)#
#
write.table(stargazer(M_PTL_rep0,M_NTL_rep0,M_TURB_rep0,M_MMI_BENT_rep0,M_XCMGW_rep0,M_XFC_NAT_rep0),file="//Users/TScott/Google Drive/duckabush/latextable_dir0")#
write.table(stargazer(M_PTL_rep5,M_NTL_rep5,M_TURB_rep5,M_MMI_BENT_rep5,M_XCMGW_rep5,M_XFC_NAT_rep5),file="//Users/TScott/Google Drive/duckabush/latextable_dir5")#
write.table(stargazer(M_PTL_rep10,M_NTL_rep10,M_TURB_rep10,M_MMI_BENT_rep10,M_XCMGW_rep10,M_XFC_NAT_rep10),file="//Users/TScott/Google Drive/duckabush/latextable_dir10")#
write.table(stargazer(M_PTL_repD,M_NTL_repD,M_TURB_repD,M_MMI_BENT_repD,M_XCMGW_repD,M_XFC_NAT_repD),file="//Users/TScott/Google Drive/duckabush/latextable_dirD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#UN-RESTRICTED MODELS: REPRESENTATION 0 lag#
M_PTL_rep0 <- lmer(PTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep0<-summary(M_PTL_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_0.csv")#
M_NTL_rep0 <- lmer(NTL~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep0<-summary(M_NTL_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_0.csv")#
#
M_TURB_rep0 <- lmer(TURB~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep0<-summary(M_TURB_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_0.csv")#
#
M_XFC_NAT_rep0 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep0<-summary(M_XFC_NAT_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep0 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep0<-summary(M_MMI_BENT_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep0 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE0+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE0:CROSS_BOUND:TRANS_BOUND+ACTIVE0:MEM_TOTAL+#
TECH_BODY:ACTIVE0+(1|HUC4)+(ACTIVE0|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep0<-summary(M_XCMGW_rep0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_0.csv")#
#
#make csv file that is table of fixed effects from rep0 models#
#make csv file that is table of fixed effects from rep0 models#
fix_rep0<-cbind(modsum_PTL_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_PTL_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_NTL_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_NTL_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_TURB_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_TURB_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_MMI_BENT_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_MMI_BENT_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_XCMGW_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_XCMGW_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),],#
modsum_XFC_NAT_rep0$coef[c(-grep("YEAR",rownames(modsum_NTL_rep0$coef)),-grep("Intercept",rownames(modsum_NTL_rep0$coef))),],#
car::Anova(M_XFC_NAT_rep0)[-grep("YEAR",rownames(car::Anova(M_NTL_rep0))),])#
#
colnames(fix_rep0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep0, "//Users/TScott/Google Drive/duckabush/fixef_rep_0.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 5 lag#
M_PTL_rep5 <- lmer(PTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep5<-summary(M_PTL_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_5.csv")#
M_NTL_rep5 <- lmer(NTL~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep5<-summary(M_NTL_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_5.csv")#
#
M_TURB_rep5 <- lmer(TURB~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep5<-summary(M_TURB_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_5.csv")#
#
M_XFC_NAT_rep5 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep5<-summary(M_XFC_NAT_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep5 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep5<-summary(M_MMI_BENT_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep5 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE5+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE5:CROSS_BOUND:TRANS_BOUND+ACTIVE5:MEM_TOTAL+#
TECH_BODY:ACTIVE5+(1|HUC4)+(ACTIVE5|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep5<-summary(M_XCMGW_rep5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_5.csv")#
#
#make csv file that is table of fixed effects from rep5 models#
#make csv file that is table of fixed effects from rep5 models#
fix_rep5<-cbind(modsum_PTL_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_PTL_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_NTL_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_NTL_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_TURB_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_TURB_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_MMI_BENT_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_MMI_BENT_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_XCMGW_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_XCMGW_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),],#
modsum_XFC_NAT_rep5$coef[c(-grep("YEAR",rownames(modsum_NTL_rep5$coef)),-grep("Intercept",rownames(modsum_NTL_rep5$coef))),],#
car::Anova(M_XFC_NAT_rep5)[-grep("YEAR",rownames(car::Anova(M_NTL_rep5))),])#
#
colnames(fix_rep5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep5, "//Users/TScott/Google Drive/duckabush/fixef_rep_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 10 lag#
M_PTL_rep10 <- lmer(PTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_rep10<-summary(M_PTL_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_rep10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_10.csv")#
M_NTL_rep10 <- lmer(NTL~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_rep10<-summary(M_NTL_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_rep10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_10.csv")#
#
M_TURB_rep10 <- lmer(TURB~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_rep10<-summary(M_TURB_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_rep10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_10.csv")#
#
M_XFC_NAT_rep10 <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_rep10<-summary(M_XFC_NAT_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_rep10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_rep10 <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_rep10<-summary(M_MMI_BENT_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_rep10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_rep10 <- lmer(XCMGW~XWIDTH+XELEV+ACTIVE10+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVE10:CROSS_BOUND:TRANS_BOUND+ACTIVE10:MEM_TOTAL+#
TECH_BODY:ACTIVE10+(1|HUC4)+(ACTIVE10|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_rep10<-summary(M_XCMGW_rep10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_rep10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_10.csv")#
#
#make csv file that is table of fixed effects from rep10 models#
#make csv file that is table of fixed effects from rep10 models#
fix_rep10<-cbind(modsum_PTL_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_PTL_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_NTL_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_NTL_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_TURB_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_TURB_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_MMI_BENT_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_MMI_BENT_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_XCMGW_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_XCMGW_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),],#
modsum_XFC_NAT_rep10$coef[c(-grep("YEAR",rownames(modsum_NTL_rep10$coef)),-grep("Intercept",rownames(modsum_NTL_rep10$coef))),],#
car::Anova(M_XFC_NAT_rep10)[-grep("YEAR",rownames(car::Anova(M_NTL_rep10))),])#
#
colnames(fix_rep10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_rep10, "//Users/TScott/Google Drive/duckabush/fixef_rep_10.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION Duration#
M_PTL_repD <- lmer(PTL~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVED:CROSS_BOUND:TRANS_BOUND+ACTIVED:MEM_TOTAL+#
TECH_BODY:ACTIVED+(1|HUC4)+(ACTIVED|STATE),data=fdat,verbose=TRUE)#
modsum_PTL_repD<-summary(M_PTL_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_repD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_rep_D.csv")#
M_NTL_repD <- lmer(NTL~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVED:CROSS_BOUND:TRANS_BOUND+ACTIVED:MEM_TOTAL+#
TECH_BODY:ACTIVED+(1|HUC4)+(ACTIVED|STATE),data=fdat,verbose=TRUE)#
modsum_NTL_repD<-summary(M_NTL_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_repD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_rep_D.csv")#
#
M_TURB_repD <- lmer(TURB~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVED:CROSS_BOUND:TRANS_BOUND+ACTIVED:MEM_TOTAL+#
TECH_BODY:ACTIVED+(1|HUC4)+(ACTIVED|STATE),data=fdat,verbose=TRUE)#
modsum_TURB_repD<-summary(M_TURB_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_repD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_rep_D.csv")#
#
M_XFC_NAT_repD <- lmer(XFC_NAT~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVED:CROSS_BOUND:TRANS_BOUND+ACTIVED:MEM_TOTAL+#
TECH_BODY:ACTIVED+(1|HUC4)+(ACTIVED|STATE),data=fdat,verbose=TRUE)#
modsum_XFC_NAT_repD<-summary(M_XFC_NAT_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_repD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_rep_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_repD <- lmer(MMI_BENT~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVED:CROSS_BOUND:TRANS_BOUND+ACTIVED:MEM_TOTAL+#
TECH_BODY:ACTIVED+(1|HUC4)+(ACTIVED|STATE),data=fdat_MMI_BENT,verbose=TRUE)#
modsum_MMI_BENT_repD<-summary(M_MMI_BENT_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_repD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_rep_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_repD <- lmer(XCMGW~XWIDTH+XELEV+ACTIVED+as.factor(YEAR)+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS++POPDENS+W1_HAG+W1_HNOAG+ACTIVED:CROSS_BOUND:TRANS_BOUND+ACTIVED:MEM_TOTAL+#
TECH_BODY:ACTIVED+(1|HUC4)+(ACTIVED|STATE),data=fdat_XCMGW,verbose=TRUE)#
modsum_XCMGW_repD<-summary(M_XCMGW_repD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_repD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_rep_D.csv")#
#
#make csv file that is table of fixed effects from repD models#
#make csv file that is table of fixed effects from repD models#
fix_repD<-cbind(modsum_PTL_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_PTL_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_NTL_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_NTL_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_TURB_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_TURB_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_MMI_BENT_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_MMI_BENT_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_XCMGW_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_XCMGW_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),],#
modsum_XFC_NAT_repD$coef[c(-grep("YEAR",rownames(modsum_NTL_repD$coef)),-grep("Intercept",rownames(modsum_NTL_repD$coef))),],#
car::Anova(M_XFC_NAT_repD)[-grep("YEAR",rownames(car::Anova(M_NTL_repD))),])#
#
colnames(fix_repD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_repD, "//Users/TScott/Google Drive/duckabush/fixef_rep_D.csv")#
stargazer(M_PTL_rep0,M_NTL_rep0,M_TURB_rep0,M_MMI_BENT_rep0,M_XCMGW_rep0,M_XFC_NAT_rep0)#
stargazer(M_PTL_rep5,M_NTL_rep5,M_TURB_rep5,M_MMI_BENT_rep5,M_XCMGW_rep5,M_XFC_NAT_rep5)#
stargazer(M_PTL_rep10,M_NTL_rep10,M_TURB_rep10,M_MMI_BENT_rep10,M_XCMGW_rep10,M_XFC_NAT_rep10)#
stargazer(M_PTL_repD,M_NTL_repD,M_TURB_repD,M_MMI_BENT_repD,M_XCMGW_repD,M_XFC_NAT_repD)#
#
write.table(stargazer(M_PTL_rep0,M_NTL_rep0,M_TURB_rep0,M_MMI_BENT_rep0,M_XCMGW_rep0,M_XFC_NAT_rep0),file="//Users/TScott/Google Drive/duckabush/latextable_dir0")#
write.table(stargazer(M_PTL_rep5,M_NTL_rep5,M_TURB_rep5,M_MMI_BENT_rep5,M_XCMGW_rep5,M_XFC_NAT_rep5),file="//Users/TScott/Google Drive/duckabush/latextable_dir5")#
write.table(stargazer(M_PTL_rep10,M_NTL_rep10,M_TURB_rep10,M_MMI_BENT_rep10,M_XCMGW_rep10,M_XFC_NAT_rep10),file="//Users/TScott/Google Drive/duckabush/latextable_dir10")#
write.table(stargazer(M_PTL_repD,M_NTL_repD,M_TURB_repD,M_MMI_BENT_repD,M_XCMGW_repD,M_XFC_NAT_repD),file="//Users/TScott/Google Drive/duckabush/latextable_dirD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 0 lag#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
M_PTL_res5 <- lmer(PTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res5<-summary(M_PTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res5_0.csv")#
#
M_NTL_res5 <- lmer(NTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res5<-summary(M_NTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res5_0.csv")#
#
M_TURB_res5 <- lmer(TURB~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res5<-summary(M_TURB_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res5_0.csv")#
#
M_XFC_NAT_res5 <- lmer(XFC_NAT~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res5<-summary(M_XFC_NAT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res5_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res5 <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res5<-summary(M_MMI_BENT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res5_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res5 <- lmer(XCMGW~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res5<-summary(M_XCMGW_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res5_0.csv")#
#
#make csv file that is table of fixed effects from res5 models#
fix_res5<-cbind(modsum_PTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_PTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_NTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_NTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_TURB_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_TURB_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_MMI_BENT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_MMI_BENT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XCMGW_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XCMGW_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XFC_NAT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XFC_NAT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),])#
colnames(fix_res5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res5, "//Users/TScott/Google Drive/duckabush/fixef_res5_0.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 5 lag#
fdat$PLAN<-ifelse(fdat$GROUP_res5P_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_res5P_null=="manage",1,0)#
M_PTL_res5 <- lmer(PTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res5<-summary(M_PTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res5_5.csv")#
#
M_NTL_res5 <- lmer(NTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res5<-summary(M_NTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res5_5.csv")#
#
M_TURB_res5 <- lmer(TURB~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res5<-summary(M_TURB_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res5_5.csv")#
#
M_XFC_NAT_res5 <- lmer(XFC_NAT~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res5<-summary(M_XFC_NAT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res5_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res5 <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res5<-summary(M_MMI_BENT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res5_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res5 <- lmer(XCMGW~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res5<-summary(M_XCMGW_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res5_5.csv")#
#
#make csv file that is table of fixed effects from res5 models#
fix_res5<-cbind(modsum_PTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_PTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_NTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_NTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_TURB_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_TURB_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_MMI_BENT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_MMI_BENT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XCMGW_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XCMGW_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XFC_NAT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XFC_NAT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),])#
colnames(fix_res5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res5, "//Users/TScott/Google Drive/duckabush/fixef_res5_5.csv")#
#UN-RESTRICTED MODELS: REPRESENTATION 10 lag#
#
fdat$PLAN<-ifelse(fdat$GROUP_res10P_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_res10P_null=="manage",1,0)#
#
#UN-res10TRICTED MODELS: GROUP res10PONSIBILITY#
M_PTL_res10 <- lmer(PTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res10<-summary(M_PTL_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res10_10.csv")#
#
M_NTL_res10 <- lmer(NTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res10<-summary(M_NTL_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res10_10.csv")#
#
M_TURB_res10 <- lmer(TURB~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res10<-summary(M_TURB_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res10_10.csv")#
#
M_XFC_NAT_res10 <- lmer(XFC_NAT~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res10<-summary(M_XFC_NAT_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res10_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res10 <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res10<-summary(M_MMI_BENT_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res10_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res10 <- lmer(XCMGW~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res10<-summary(M_XCMGW_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res10_10.csv")#
#
#make csv file that is table of fixed effects from res10 models#
fix_res10<-cbind(modsum_PTL_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_PTL_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_NTL_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_NTL_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_TURB_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_TURB_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_MMI_BENT_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_MMI_BENT_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_XCMGW_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_XCMGW_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_XFC_NAT_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_XFC_NAT_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),])#
colnames(fix_res10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res10, "//Users/TScott/Google Drive/duckabush/fixef_res10_10.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY Duration#
fdat$PLAN<-ifelse(fdat$GROUP_resDP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_resDP_null=="manage",1,0)#
#
M_PTL_resD <- lmer(PTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_resD<-summary(M_PTL_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_resD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_resD_D.csv")#
#
M_NTL_resD <- lmer(NTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_resD<-summary(M_NTL_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_resD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_resD_D.csv")#
#
M_TURB_resD <- lmer(TURB~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_resD<-summary(M_TURB_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_resD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_resD_D.csv")#
#
M_XFC_NAT_resD <- lmer(XFC_NAT~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_resD<-summary(M_XFC_NAT_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_resD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_resD_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_resD <- lmer(MMI_BENT~ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_resD<-summary(M_MMI_BENT_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_resD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_resD_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_resD <- lmer(XCMGW~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_resD<-summary(M_XCMGW_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_resD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_resD_D.csv")#
#
#make csv file that is table of fixed effects from resD models#
fix_resD<-cbind(modsum_PTL_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_PTL_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_NTL_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_NTL_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_TURB_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_TURB_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_MMI_BENT_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_MMI_BENT_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_XCMGW_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_XCMGW_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_XFC_NAT_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_XFC_NAT_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),])#
colnames(fix_resD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_resD, "//Users/TScott/Google Drive/duckabush/fixef_resD_D.csv")#
#
stargazer(M_PTL_res0,M_NTL_res0,M_TURB_res0,M_MMI_BENT_res0,M_XCMGW_res0,M_XFC_NAT_res0)#
stargazer(M_PTL_res5,M_NTL_res5,M_TURB_res5,M_MMI_BENT_res5,M_XCMGW_res5,M_XFC_NAT_res5)#
stargazer(M_PTL_res10,M_NTL_res10,M_TURB_res10,M_MMI_BENT_res10,M_XCMGW_res10,M_XFC_NAT_res10)#
stargazer(M_PTL_resD,M_NTL_resD,M_TURB_resD,M_MMI_BENT_resD,M_XCMGW_resD,M_XFC_NAT_resD)#
#
write.table(stargazer(M_PTL_res0,M_NTL_res0,M_TURB_res0,M_MMI_BENT_res0,M_XCMGW_res0,M_XFC_NAT_res0),file="//Users/TScott/Google Drive/duckabush/latextable_dir0")#
write.table(stargazer(M_PTL_res5,M_NTL_res5,M_TURB_res5,M_MMI_BENT_res5,M_XCMGW_res5,M_XFC_NAT_res5),file="//Users/TScott/Google Drive/duckabush/latextable_dir5")#
write.table(stargazer(M_PTL_res10,M_NTL_res10,M_TURB_res10,M_MMI_BENT_res10,M_XCMGW_res10,M_XFC_NAT_res10),file="//Users/TScott/Google Drive/duckabush/latextable_dir10")#
write.table(stargazer(M_PTL_resD,M_NTL_resD,M_TURB_resD,M_MMI_BENT_resD,M_XCMGW_resD,M_XFC_NAT_resD),file="//Users/TScott/Google Drive/duckabush/latextable_dirD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 0 lag#
M_PTL_res5 <- lmer(PTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res5<-summary(M_PTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res5_0.csv")#
#
M_NTL_res5 <- lmer(NTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res5<-summary(M_NTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res5_0.csv")#
#
M_TURB_res5 <- lmer(TURB~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res5<-summary(M_TURB_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res5_0.csv")#
#
M_XFC_NAT_res5 <- lmer(XFC_NAT~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res5<-summary(M_XFC_NAT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res5_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res5 <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res5<-summary(M_MMI_BENT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res5_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res5 <- lmer(XCMGW~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res5<-summary(M_XCMGW_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res5_0.csv")#
#
#make csv file that is table of fixed effects from res5 models#
fix_res5<-cbind(modsum_PTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_PTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_NTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_NTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_TURB_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_TURB_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_MMI_BENT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_MMI_BENT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XCMGW_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XCMGW_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XFC_NAT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XFC_NAT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),])#
colnames(fix_res5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res5, "//Users/TScott/Google Drive/duckabush/fixef_res5_0.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 5 lag#
M_PTL_res5 <- lmer(PTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res5<-summary(M_PTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res5_5.csv")#
#
M_NTL_res5 <- lmer(NTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res5<-summary(M_NTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res5_5.csv")#
#
M_TURB_res5 <- lmer(TURB~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res5<-summary(M_TURB_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res5_5.csv")#
#
M_XFC_NAT_res5 <- lmer(XFC_NAT~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res5<-summary(M_XFC_NAT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res5_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res5 <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res5<-summary(M_MMI_BENT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res5_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res5 <- lmer(XCMGW~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res5<-summary(M_XCMGW_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res5_5.csv")#
#
#make csv file that is table of fixed effects from res5 models#
fix_res5<-cbind(modsum_PTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_PTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_NTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_NTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_TURB_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_TURB_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_MMI_BENT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_MMI_BENT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XCMGW_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XCMGW_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XFC_NAT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XFC_NAT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),])#
colnames(fix_res5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res5, "//Users/TScott/Google Drive/duckabush/fixef_res5_5.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY 10 lag#
#
M_PTL_res10 <- lmer(PTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res10<-summary(M_PTL_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res10_10.csv")#
#
M_NTL_res10 <- lmer(NTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res10<-summary(M_NTL_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res10_10.csv")#
#
M_TURB_res10 <- lmer(TURB~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res10<-summary(M_TURB_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res10_10.csv")#
#
M_XFC_NAT_res10 <- lmer(XFC_NAT~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res10<-summary(M_XFC_NAT_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res10_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res10 <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res10<-summary(M_MMI_BENT_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res10_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res10 <- lmer(XCMGW~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res10<-summary(M_XCMGW_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res10_10.csv")#
#
#make csv file that is table of fixed effects from res10 models#
fix_res10<-cbind(modsum_PTL_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_PTL_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_NTL_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_NTL_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_TURB_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_TURB_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_MMI_BENT_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_MMI_BENT_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_XCMGW_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_XCMGW_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_XFC_NAT_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_XFC_NAT_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),])#
colnames(fix_res10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res10, "//Users/TScott/Google Drive/duckabush/fixef_res10_10.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY Duration#
M_PTL_resD <- lmer(PTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_resD<-summary(M_PTL_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_resD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_resD_D.csv")#
#
M_NTL_resD <- lmer(NTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_resD<-summary(M_NTL_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_resD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_resD_D.csv")#
#
M_TURB_resD <- lmer(TURB~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_resD<-summary(M_TURB_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_resD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_resD_D.csv")#
#
M_XFC_NAT_resD <- lmer(XFC_NAT~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_resD<-summary(M_XFC_NAT_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_resD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_resD_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_resD <- lmer(MMI_BENT~ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_resD<-summary(M_MMI_BENT_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_resD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_resD_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_resD <- lmer(XCMGW~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_resD<-summary(M_XCMGW_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_resD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_resD_D.csv")#
#
#make csv file that is table of fixed effects from resD models#
fix_resD<-cbind(modsum_PTL_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_PTL_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_NTL_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_NTL_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_TURB_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_TURB_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_MMI_BENT_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_MMI_BENT_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_XCMGW_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_XCMGW_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_XFC_NAT_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_XFC_NAT_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),])#
colnames(fix_resD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_resD, "//Users/TScott/Google Drive/duckabush/fixef_resD_D.csv")#
#
stargazer(M_PTL_res0,M_NTL_res0,M_TURB_res0,M_MMI_BENT_res0,M_XCMGW_res0,M_XFC_NAT_res0)#
stargazer(M_PTL_res5,M_NTL_res5,M_TURB_res5,M_MMI_BENT_res5,M_XCMGW_res5,M_XFC_NAT_res5)#
stargazer(M_PTL_res10,M_NTL_res10,M_TURB_res10,M_MMI_BENT_res10,M_XCMGW_res10,M_XFC_NAT_res10)#
stargazer(M_PTL_resD,M_NTL_resD,M_TURB_resD,M_MMI_BENT_resD,M_XCMGW_resD,M_XFC_NAT_resD)#
#
write.table(stargazer(M_PTL_res0,M_NTL_res0,M_TURB_res0,M_MMI_BENT_res0,M_XCMGW_res0,M_XFC_NAT_res0),file="//Users/TScott/Google Drive/duckabush/latextable_dir0")#
write.table(stargazer(M_PTL_res5,M_NTL_res5,M_TURB_res5,M_MMI_BENT_res5,M_XCMGW_res5,M_XFC_NAT_res5),file="//Users/TScott/Google Drive/duckabush/latextable_dir5")#
write.table(stargazer(M_PTL_res10,M_NTL_res10,M_TURB_res10,M_MMI_BENT_res10,M_XCMGW_res10,M_XFC_NAT_res10),file="//Users/TScott/Google Drive/duckabush/latextable_dir10")#
write.table(stargazer(M_PTL_resD,M_NTL_resD,M_TURB_resD,M_MMI_BENT_resD,M_XCMGW_resD,M_XFC_NAT_resD),file="//Users/TScott/Google Drive/duckabush/latextable_dirD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
fdat$PLAN<-ifelse(fdat$GROUP_RESP_null=="plan",1,0)#
fdat$MANAGE<-ifelse(fdat$GROUP_RESP_null=="manage",1,0)#
#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 0 lag#
M_PTL_res0 <- lmer(PTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res0<-summary(M_PTL_res0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res0_0.csv")#
#
M_NTL_res0 <- lmer(NTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res0<-summary(M_NTL_res0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res0_0.csv")#
#
M_TURB_res0 <- lmer(TURB~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res0<-summary(M_TURB_res0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res0_0.csv")#
#
M_XFC_NAT_res0 <- lmer(XFC_NAT~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res0<-summary(M_XFC_NAT_res0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res0_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res0 <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res0<-summary(M_MMI_BENT_res0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res0_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res0 <- lmer(XCMGW~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:PLAN+#
ACTIVE0:MANAGE+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res0<-summary(M_XCMGW_res0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res0_0.csv")#
#
#make csv file that is table of fixed effects from res0 models#
fix_res0<-cbind(modsum_PTL_res0$coef[c(-grep("YEAR",rownames(modsum_NTL_res0$coef)),-grep("Intercept",rownames(modsum_NTL_res0$coef))),],#
car::Anova(M_PTL_res0)[-grep("YEAR",rownames(car::Anova(M_NTL_res0))),],#
modsum_NTL_res0$coef[c(-grep("YEAR",rownames(modsum_NTL_res0$coef)),-grep("Intercept",rownames(modsum_NTL_res0$coef))),],#
car::Anova(M_NTL_res0)[-grep("YEAR",rownames(car::Anova(M_NTL_res0))),],#
modsum_TURB_res0$coef[c(-grep("YEAR",rownames(modsum_NTL_res0$coef)),-grep("Intercept",rownames(modsum_NTL_res0$coef))),],#
car::Anova(M_TURB_res0)[-grep("YEAR",rownames(car::Anova(M_NTL_res0))),],#
modsum_MMI_BENT_res0$coef[c(-grep("YEAR",rownames(modsum_NTL_res0$coef)),-grep("Intercept",rownames(modsum_NTL_res0$coef))),],#
car::Anova(M_MMI_BENT_res0)[-grep("YEAR",rownames(car::Anova(M_NTL_res0))),],#
modsum_XCMGW_res0$coef[c(-grep("YEAR",rownames(modsum_NTL_res0$coef)),-grep("Intercept",rownames(modsum_NTL_res0$coef))),],#
car::Anova(M_XCMGW_res0)[-grep("YEAR",rownames(car::Anova(M_NTL_res0))),],#
modsum_XFC_NAT_res0$coef[c(-grep("YEAR",rownames(modsum_NTL_res0$coef)),-grep("Intercept",rownames(modsum_NTL_res0$coef))),],#
car::Anova(M_XFC_NAT_res0)[-grep("YEAR",rownames(car::Anova(M_NTL_res0))),])#
colnames(fix_res0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res0, "//Users/TScott/Google Drive/duckabush/fixef_res0_0.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 5 lag#
M_PTL_res5 <- lmer(PTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res5<-summary(M_PTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res5_5.csv")#
#
M_NTL_res5 <- lmer(NTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res5<-summary(M_NTL_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res5_5.csv")#
#
M_TURB_res5 <- lmer(TURB~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res5<-summary(M_TURB_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res5_5.csv")#
#
M_XFC_NAT_res5 <- lmer(XFC_NAT~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res5<-summary(M_XFC_NAT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res5_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res5 <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res5<-summary(M_MMI_BENT_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res5_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res5 <- lmer(XCMGW~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:PLAN+#
ACTIVE5:MANAGE+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res5<-summary(M_XCMGW_res5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res5_5.csv")#
#
#make csv file that is table of fixed effects from res5 models#
fix_res5<-cbind(modsum_PTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_PTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_NTL_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_NTL_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_TURB_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_TURB_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_MMI_BENT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_MMI_BENT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XCMGW_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XCMGW_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),],#
modsum_XFC_NAT_res5$coef[c(-grep("YEAR",rownames(modsum_NTL_res5$coef)),-grep("Intercept",rownames(modsum_NTL_res5$coef))),],#
car::Anova(M_XFC_NAT_res5)[-grep("YEAR",rownames(car::Anova(M_NTL_res5))),])#
colnames(fix_res5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res5, "//Users/TScott/Google Drive/duckabush/fixef_res5_5.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY 10 lag#
#
M_PTL_res10 <- lmer(PTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_res10<-summary(M_PTL_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_res10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_res10_10.csv")#
#
M_NTL_res10 <- lmer(NTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_res10<-summary(M_NTL_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_res10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_res10_10.csv")#
#
M_TURB_res10 <- lmer(TURB~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_res10<-summary(M_TURB_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_res10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_res10_10.csv")#
#
M_XFC_NAT_res10 <- lmer(XFC_NAT~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_res10<-summary(M_XFC_NAT_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_res10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_res10_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_res10 <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_res10<-summary(M_MMI_BENT_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_res10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_res10_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_res10 <- lmer(XCMGW~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:PLAN+#
ACTIVE10:MANAGE+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_res10<-summary(M_XCMGW_res10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_res10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_res10_10.csv")#
#
#make csv file that is table of fixed effects from res10 models#
fix_res10<-cbind(modsum_PTL_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_PTL_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_NTL_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_NTL_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_TURB_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_TURB_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_MMI_BENT_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_MMI_BENT_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_XCMGW_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_XCMGW_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),],#
modsum_XFC_NAT_res10$coef[c(-grep("YEAR",rownames(modsum_NTL_res10$coef)),-grep("Intercept",rownames(modsum_NTL_res10$coef))),],#
car::Anova(M_XFC_NAT_res10)[-grep("YEAR",rownames(car::Anova(M_NTL_res10))),])#
colnames(fix_res10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_res10, "//Users/TScott/Google Drive/duckabush/fixef_res10_10.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY Duration#
M_PTL_resD <- lmer(PTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_resD<-summary(M_PTL_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_resD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_resD_D.csv")#
#
M_NTL_resD <- lmer(NTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_resD<-summary(M_NTL_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_resD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_resD_D.csv")#
#
M_TURB_resD <- lmer(TURB~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_resD<-summary(M_TURB_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_resD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_resD_D.csv")#
#
M_XFC_NAT_resD <- lmer(XFC_NAT~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_resD<-summary(M_XFC_NAT_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_resD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_resD_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_resD <- lmer(MMI_BENT~ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_resD<-summary(M_MMI_BENT_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_resD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_resD_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_resD <- lmer(XCMGW~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:PLAN+#
ACTIVED:MANAGE+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_resD<-summary(M_XCMGW_resD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_resD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_resD_D.csv")#
#
#make csv file that is table of fixed effects from resD models#
fix_resD<-cbind(modsum_PTL_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_PTL_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_NTL_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_NTL_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_TURB_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_TURB_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_MMI_BENT_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_MMI_BENT_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_XCMGW_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_XCMGW_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),],#
modsum_XFC_NAT_resD$coef[c(-grep("YEAR",rownames(modsum_NTL_resD$coef)),-grep("Intercept",rownames(modsum_NTL_resD$coef))),],#
car::Anova(M_XFC_NAT_resD)[-grep("YEAR",rownames(car::Anova(M_NTL_resD))),])#
colnames(fix_resD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_resD, "//Users/TScott/Google Drive/duckabush/fixef_resD_D.csv")#
#
stargazer(M_PTL_res0,M_NTL_res0,M_TURB_res0,M_MMI_BENT_res0,M_XCMGW_res0,M_XFC_NAT_res0)#
stargazer(M_PTL_res5,M_NTL_res5,M_TURB_res5,M_MMI_BENT_res5,M_XCMGW_res5,M_XFC_NAT_res5)#
stargazer(M_PTL_res10,M_NTL_res10,M_TURB_res10,M_MMI_BENT_res10,M_XCMGW_res10,M_XFC_NAT_res10)#
stargazer(M_PTL_resD,M_NTL_resD,M_TURB_resD,M_MMI_BENT_resD,M_XCMGW_resD,M_XFC_NAT_resD)#
#
write.table(stargazer(M_PTL_res0,M_NTL_res0,M_TURB_res0,M_MMI_BENT_res0,M_XCMGW_res0,M_XFC_NAT_res0),file="//Users/TScott/Google Drive/duckabush/latextable_dir0")#
write.table(stargazer(M_PTL_res5,M_NTL_res5,M_TURB_res5,M_MMI_BENT_res5,M_XCMGW_res5,M_XFC_NAT_res5),file="//Users/TScott/Google Drive/duckabush/latextable_dir5")#
write.table(stargazer(M_PTL_res10,M_NTL_res10,M_TURB_res10,M_MMI_BENT_res10,M_XCMGW_res10,M_XFC_NAT_res10),file="//Users/TScott/Google Drive/duckabush/latextable_dir10")#
write.table(stargazer(M_PTL_resD,M_NTL_resD,M_TURB_resD,M_MMI_BENT_resD,M_XCMGW_resD,M_XFC_NAT_resD),file="//Users/TScott/Google Drive/duckabush/latextable_dirD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#
#UN-RESTRICTED MODELS: GROUP FORMALIZATION 0 lag#
M_PTL_form0 <- lmer(PTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form0<-summary(M_PTL_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_0.csv")#
#
M_NTL_form0 <- lmer(NTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form0<-summary(M_NTL_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_0.csv")#
#
M_TURB_form0 <- lmer(TURB~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form0<-summary(M_TURB_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_0.csv")#
#
M_XFC_NAT_form0 <- lmer(XFC_NAT~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form0<-summary(M_XFC_NAT_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form0 <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form0<-summary(M_MMI_BENT_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form0 <- lmer(XCMGW~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form0<-summary(M_XCMGW_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_0.csv")#
#
#make csv file that is table of fixed effects from form0 models#
fix_form0<-cbind(modsum_PTL_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_PTL_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_NTL_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_NTL_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_TURB_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_TURB_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_MMI_BENT_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_MMI_BENT_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_XCMGW_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_XCMGW_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_XFC_NAT_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_XFC_NAT_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),])#
colnames(fix_form0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form0, "//Users/TScott/Google Drive/duckabush/fixef_form_0.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 5 lag#
M_PTL_form5 <- lmer(PTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form5<-summary(M_PTL_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_5.csv")#
#
M_NTL_form5 <- lmer(NTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form5<-summary(M_NTL_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_5.csv")#
#
M_TURB_form5 <- lmer(TURB~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form5<-summary(M_TURB_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_5.csv")#
#
M_XFC_NAT_form5 <- lmer(XFC_NAT~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form5<-summary(M_XFC_NAT_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form5 <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form5<-summary(M_MMI_BENT_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form5 <- lmer(XCMGW~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form5<-summary(M_XCMGW_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_5.csv")#
#
#make csv file that is table of fixed effects from form5 models#
fix_form5<-cbind(modsum_PTL_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_PTL_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_NTL_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_NTL_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_TURB_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_TURB_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_MMI_BENT_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_MMI_BENT_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_XCMGW_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_XCMGW_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_XFC_NAT_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_XFC_NAT_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),])#
colnames(fix_form5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form5, "//Users/TScott/Google Drive/duckabush/fixef_form_5.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY 10 lag#
#
M_PTL_form10 <- lmer(PTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form10<-summary(M_PTL_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
#
M_NTL_form10 <- lmer(NTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form10<-summary(M_NTL_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form10 <- lmer(TURB~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form10<-summary(M_TURB_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form10 <- lmer(XFC_NAT~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form10<-summary(M_XFC_NAT_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form10 <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form10<-summary(M_MMI_BENT_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form10 <- lmer(XCMGW~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form10<-summary(M_XCMGW_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
#
#make csv file that is table of fixed effects from form10 models#
fix_form10<-cbind(modsum_PTL_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_PTL_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_NTL_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_NTL_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_TURB_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_TURB_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_MMI_BENT_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_MMI_BENT_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_XCMGW_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_XCMGW_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_XFC_NAT_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_XFC_NAT_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),])#
colnames(fix_form10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form10, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY Duration#
M_PTL_formD <- lmer(PTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_formD<-summary(M_PTL_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_formD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_D.csv")#
#
M_NTL_formD <- lmer(NTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_formD<-summary(M_NTL_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_formD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_D.csv")#
#
M_TURB_formD <- lmer(TURB~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_formD<-summary(M_TURB_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_formD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_D.csv")#
#
M_XFC_NAT_formD <- lmer(XFC_NAT~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_formD<-summary(M_XFC_NAT_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_formD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_formD <- lmer(MMI_BENT~ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_formD<-summary(M_MMI_BENT_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_formD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_formD <- lmer(XCMGW~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_formD<-summary(M_XCMGW_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_formD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_D.csv")#
#
#make csv file that is table of fixed effects from formD models#
fix_formD<-cbind(modsum_PTL_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_PTL_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_NTL_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_NTL_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_TURB_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_TURB_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_MMI_BENT_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_MMI_BENT_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_XCMGW_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_XCMGW_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_XFC_NAT_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_XFC_NAT_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),])#
colnames(fix_formD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_formD, "//Users/TScott/Google Drive/duckabush/fixef_form_D.csv")#
#
stargazer(M_PTL_form0,M_NTL_form0,M_TURB_form0,M_MMI_BENT_form0,M_XCMGW_form0,M_XFC_NAT_form0)#
stargazer(M_PTL_form5,M_NTL_form5,M_TURB_form5,M_MMI_BENT_form5,M_XCMGW_form5,M_XFC_NAT_form5)#
stargazer(M_PTL_form10,M_NTL_form10,M_TURB_form10,M_MMI_BENT_form10,M_XCMGW_form10,M_XFC_NAT_form10)#
stargazer(M_PTL_formD,M_NTL_formD,M_TURB_formD,M_MMI_BENT_formD,M_XCMGW_formD,M_XFC_NAT_formD)#
#
write.table(stargazer(M_PTL_form0,M_NTL_form0,M_TURB_form0,M_MMI_BENT_form0,M_XCMGW_form0,M_XFC_NAT_form0),file="//Users/TScott/Google Drive/duckabush/latextable_form0")#
write.table(stargazer(M_PTL_form5,M_NTL_form5,M_TURB_form5,M_MMI_BENT_form5,M_XCMGW_form5,M_XFC_NAT_form5),file="//Users/TScott/Google Drive/duckabush/latextable_form5")#
write.table(stargazer(M_PTL_form10,M_NTL_form10,M_TURB_form10,M_MMI_BENT_form10,M_XCMGW_form10,M_XFC_NAT_form10),file="//Users/TScott/Google Drive/duckabush/latextable_form10")#
write.table(stargazer(M_PTL_formD,M_NTL_formD,M_TURB_formD,M_MMI_BENT_formD,M_XCMGW_formD,M_XFC_NAT_formD),file="//Users/TScott/Google Drive/duckabush/latextable_formD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: information sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSFORM FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSFORM GOAL-FORMALIZATION VARIABLE#
FORM_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){FORM_OBJECT[i]="OBJECTIVES"}}#
fdat$FORM_OBJECT<-FORM_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$FORM_OBJECT_num<-ifelse(fdat$FORM_OBJECT=="0",0,ifelse(fdat$FORM_OBJECT=="MISSION",1,ifelse(fdat$FORM_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
fdat$obj_trans<-ifelse(fdat$FORM_OBJECT=="0","MISSION",fdat$FORM_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#
#UN-RESTRICTED MODELS: GROUP FORMALIZATION 0 lag#
M_PTL_form0 <- lmer(PTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form0<-summary(M_PTL_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_0.csv")#
#
M_NTL_form0 <- lmer(NTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form0<-summary(M_NTL_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_0.csv")#
#
M_TURB_form0 <- lmer(TURB~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form0<-summary(M_TURB_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_0.csv")#
#
M_XFC_NAT_form0 <- lmer(XFC_NAT~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form0<-summary(M_XFC_NAT_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form0 <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form0<-summary(M_MMI_BENT_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form0 <- lmer(XCMGW~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FACILITATE+#
ACTIVE0:GOALS+#
ACTIVE0:OBJECTIVES+#
ACTIVE0:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form0<-summary(M_XCMGW_form0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_0.csv")#
#
#make csv file that is table of fixed effects from form0 models#
fix_form0<-cbind(modsum_PTL_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_PTL_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_NTL_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_NTL_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_TURB_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_TURB_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_MMI_BENT_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_MMI_BENT_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_XCMGW_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_XCMGW_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),],#
modsum_XFC_NAT_form0$coef[c(-grep("YEAR",rownames(modsum_NTL_form0$coef)),-grep("Intercept",rownames(modsum_NTL_form0$coef))),],#
car::Anova(M_XFC_NAT_form0)[-grep("YEAR",rownames(car::Anova(M_NTL_form0))),])#
colnames(fix_form0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form0, "//Users/TScott/Google Drive/duckabush/fixef_form_0.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 5 lag#
M_PTL_form5 <- lmer(PTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form5<-summary(M_PTL_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_5.csv")#
#
M_NTL_form5 <- lmer(NTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form5<-summary(M_NTL_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_5.csv")#
#
M_TURB_form5 <- lmer(TURB~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form5<-summary(M_TURB_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_5.csv")#
#
M_XFC_NAT_form5 <- lmer(XFC_NAT~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form5<-summary(M_XFC_NAT_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form5 <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form5<-summary(M_MMI_BENT_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form5 <- lmer(XCMGW~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FACILITATE+#
ACTIVE5:GOALS+#
ACTIVE5:OBJECTIVES+#
ACTIVE5:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form5<-summary(M_XCMGW_form5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_5.csv")#
#
#make csv file that is table of fixed effects from form5 models#
fix_form5<-cbind(modsum_PTL_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_PTL_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_NTL_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_NTL_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_TURB_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_TURB_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_MMI_BENT_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_MMI_BENT_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_XCMGW_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_XCMGW_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),],#
modsum_XFC_NAT_form5$coef[c(-grep("YEAR",rownames(modsum_NTL_form5$coef)),-grep("Intercept",rownames(modsum_NTL_form5$coef))),],#
car::Anova(M_XFC_NAT_form5)[-grep("YEAR",rownames(car::Anova(M_NTL_form5))),])#
colnames(fix_form5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form5, "//Users/TScott/Google Drive/duckabush/fixef_form_5.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY 10 lag#
#
M_PTL_form10 <- lmer(PTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_form10<-summary(M_PTL_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_form10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_10.csv")#
#
M_NTL_form10 <- lmer(NTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_form10<-summary(M_NTL_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_form10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_10.csv")#
#
M_TURB_form10 <- lmer(TURB~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_form10<-summary(M_TURB_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_form10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_10.csv")#
#
M_XFC_NAT_form10 <- lmer(XFC_NAT~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_form10<-summary(M_XFC_NAT_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_form10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_form10 <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_form10<-summary(M_MMI_BENT_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_form10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_form10 <- lmer(XCMGW~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FACILITATE+#
ACTIVE10:GOALS+#
ACTIVE10:OBJECTIVES+#
ACTIVE10:HAS_BYLAWS+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_form10<-summary(M_XCMGW_form10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_form10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_10.csv")#
#
#make csv file that is table of fixed effects from form10 models#
fix_form10<-cbind(modsum_PTL_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_PTL_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_NTL_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_NTL_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_TURB_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_TURB_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_MMI_BENT_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_MMI_BENT_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_XCMGW_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_XCMGW_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),],#
modsum_XFC_NAT_form10$coef[c(-grep("YEAR",rownames(modsum_NTL_form10$coef)),-grep("Intercept",rownames(modsum_NTL_form10$coef))),],#
car::Anova(M_XFC_NAT_form10)[-grep("YEAR",rownames(car::Anova(M_NTL_form10))),])#
colnames(fix_form10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_form10, "//Users/TScott/Google Drive/duckabush/fixef_form_10.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY Duration#
M_PTL_formD <- lmer(PTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FACILITATE+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_formD<-summary(M_PTL_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_formD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_form_D.csv")#
#
M_NTL_formD <- lmer(NTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FACILITATE+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_formD<-summary(M_NTL_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_formD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_form_D.csv")#
#
M_TURB_formD <- lmer(TURB~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FACILITATE+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_formD<-summary(M_TURB_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_formD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_form_D.csv")#
#
M_XFC_NAT_formD <- lmer(XFC_NAT~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FACILITATE+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_formD<-summary(M_XFC_NAT_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_formD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_form_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_formD <- lmer(MMI_BENT~ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FACILITATE+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_formD<-summary(M_MMI_BENT_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_formD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_form_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_formD <- lmer(XCMGW~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FACILITATE+#
ACTIVED:GOALS+#
ACTIVED:OBJECTIVES+#
ACTIVED:HAS_BYLAWS+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_formD<-summary(M_XCMGW_formD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_formD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_form_D.csv")#
#
#make csv file that is table of fixed effects from formD models#
fix_formD<-cbind(modsum_PTL_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_PTL_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_NTL_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_NTL_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_TURB_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_TURB_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_MMI_BENT_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_MMI_BENT_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_XCMGW_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_XCMGW_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),],#
modsum_XFC_NAT_formD$coef[c(-grep("YEAR",rownames(modsum_NTL_formD$coef)),-grep("Intercept",rownames(modsum_NTL_formD$coef))),],#
car::Anova(M_XFC_NAT_formD)[-grep("YEAR",rownames(car::Anova(M_NTL_formD))),])#
colnames(fix_formD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_formD, "//Users/TScott/Google Drive/duckabush/fixef_form_D.csv")#
#
stargazer(M_PTL_form0,M_NTL_form0,M_TURB_form0,M_MMI_BENT_form0,M_XCMGW_form0,M_XFC_NAT_form0)#
stargazer(M_PTL_form5,M_NTL_form5,M_TURB_form5,M_MMI_BENT_form5,M_XCMGW_form5,M_XFC_NAT_form5)#
stargazer(M_PTL_form10,M_NTL_form10,M_TURB_form10,M_MMI_BENT_form10,M_XCMGW_form10,M_XFC_NAT_form10)#
stargazer(M_PTL_formD,M_NTL_formD,M_TURB_formD,M_MMI_BENT_formD,M_XCMGW_formD,M_XFC_NAT_formD)#
#
write.table(stargazer(M_PTL_form0,M_NTL_form0,M_TURB_form0,M_MMI_BENT_form0,M_XCMGW_form0,M_XFC_NAT_form0),file="//Users/TScott/Google Drive/duckabush/latextable_form0")#
write.table(stargazer(M_PTL_form5,M_NTL_form5,M_TURB_form5,M_MMI_BENT_form5,M_XCMGW_form5,M_XFC_NAT_form5),file="//Users/TScott/Google Drive/duckabush/latextable_form5")#
write.table(stargazer(M_PTL_form10,M_NTL_form10,M_TURB_form10,M_MMI_BENT_form10,M_XCMGW_form10,M_XFC_NAT_form10),file="//Users/TScott/Google Drive/duckabush/latextable_form10")#
write.table(stargazer(M_PTL_formD,M_NTL_formD,M_TURB_formD,M_MMI_BENT_formD,M_XCMGW_formD,M_XFC_NAT_formD),file="//Users/TScott/Google Drive/duckabush/latextable_formD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_fund<-as.numeric(fdat$GROUP_fund)#
fdat$GROUP_fund<-ifelse(is.na(fdat$GROUP_fund)==TRUE,0,fdat$GROUP_fund)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_fund_lag0<-fdat$GROUP_fund+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_fund_lag0)&fdat$GROUP_fund_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_fund_lag5<-fdat$GROUP_fund+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_fund_lag5)&fdat$GROUP_fund_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_fund_lag10<-fdat$GROUP_fund+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_fund_lag10)&fdat$GROUP_fund_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_fund<-as.numeric(fdat$GROUP_fund)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_fund[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_fund[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: infundation sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSfund FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSfund GOAL-fundALIZATION VARIABLE#
fund_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){fund_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){fund_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){fund_OBJECT[i]="OBJECTIVES"}}#
fdat$fund_OBJECT<-fund_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_fund[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_fund[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$fund_OBJECT_num<-ifelse(fdat$fund_OBJECT=="0",0,ifelse(fdat$fund_OBJECT=="MISSION",1,ifelse(fdat$fund_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
fdat$obj_trans<-ifelse(fdat$fund_OBJECT=="0","MISSION",fdat$fund_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#
#UN-RESTRICTED MODELS: GROUP fundALIZATION 0 lag#
M_PTL_fund0 <- lmer(PTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fund0<-summary(M_PTL_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fund0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fund_0.csv")#
#
M_NTL_fund0 <- lmer(NTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fund0<-summary(M_NTL_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fund0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fund_0.csv")#
#
M_TURB_fund0 <- lmer(TURB~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fund0<-summary(M_TURB_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fund0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fund_0.csv")#
#
M_XFC_NAT_fund0 <- lmer(XFC_NAT~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fund0<-summary(M_XFC_NAT_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fund0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fund_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fund0 <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fund0<-summary(M_MMI_BENT_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fund0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fund_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fund0 <- lmer(XCMGW~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fund0<-summary(M_XCMGW_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fund0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fund_0.csv")#
#
#make csv file that is table of fixed effects from fund0 models#
fix_fund0<-cbind(modsum_PTL_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_PTL_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_NTL_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_NTL_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_TURB_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_TURB_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_MMI_BENT_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_MMI_BENT_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_XCMGW_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_XCMGW_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_XFC_NAT_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_XFC_NAT_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),])#
colnames(fix_fund0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fund0, "//Users/TScott/Google Drive/duckabush/fixef_fund_0.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 5 lag#
M_PTL_fund5 <- lmer(PTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fund5<-summary(M_PTL_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fund5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fund_5.csv")#
#
M_NTL_fund5 <- lmer(NTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fund5<-summary(M_NTL_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fund5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fund_5.csv")#
#
M_TURB_fund5 <- lmer(TURB~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fund5<-summary(M_TURB_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fund5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fund_5.csv")#
#
M_XFC_NAT_fund5 <- lmer(XFC_NAT~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fund5<-summary(M_XFC_NAT_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fund5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fund_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fund5 <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fund5<-summary(M_MMI_BENT_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fund5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fund_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fund5 <- lmer(XCMGW~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fund5<-summary(M_XCMGW_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fund5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fund_5.csv")#
#
#make csv file that is table of fixed effects from fund5 models#
fix_fund5<-cbind(modsum_PTL_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_PTL_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_NTL_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_NTL_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_TURB_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_TURB_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_MMI_BENT_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_MMI_BENT_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_XCMGW_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_XCMGW_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_XFC_NAT_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_XFC_NAT_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),])#
colnames(fix_fund5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fund5, "//Users/TScott/Google Drive/duckabush/fixef_fund_5.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY 10 lag#
#
M_PTL_fund10 <- lmer(PTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fund10<-summary(M_PTL_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fund10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fund_10.csv")#
#
M_NTL_fund10 <- lmer(NTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fund10<-summary(M_NTL_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fund10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fund_10.csv")#
#
M_TURB_fund10 <- lmer(TURB~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fund10<-summary(M_TURB_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fund10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fund_10.csv")#
#
M_XFC_NAT_fund10 <- lmer(XFC_NAT~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fund10<-summary(M_XFC_NAT_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fund10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fund_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fund10 <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fund10<-summary(M_MMI_BENT_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fund10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fund_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fund10 <- lmer(XCMGW~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fund10<-summary(M_XCMGW_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fund10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fund_10.csv")#
#
#make csv file that is table of fixed effects from fund10 models#
fix_fund10<-cbind(modsum_PTL_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_PTL_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_NTL_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_NTL_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_TURB_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_TURB_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_MMI_BENT_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_MMI_BENT_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_XCMGW_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_XCMGW_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_XFC_NAT_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_XFC_NAT_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),])#
colnames(fix_fund10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fund10, "//Users/TScott/Google Drive/duckabush/fixef_fund_10.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY Duration#
M_PTL_fundD <- lmer(PTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fundD<-summary(M_PTL_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fundD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fund_D.csv")#
#
M_NTL_fundD <- lmer(NTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fundD<-summary(M_NTL_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fundD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fund_D.csv")#
#
M_TURB_fundD <- lmer(TURB~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fundD<-summary(M_TURB_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fundD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fund_D.csv")#
#
M_XFC_NAT_fundD <- lmer(XFC_NAT~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fundD<-summary(M_XFC_NAT_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fundD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fund_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fundD <- lmer(MMI_BENT~ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fundD<-summary(M_MMI_BENT_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fundD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fund_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fundD <- lmer(XCMGW~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fundD<-summary(M_XCMGW_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fundD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fund_D.csv")#
#
#make csv file that is table of fixed effects from fundD models#
fix_fundD<-cbind(modsum_PTL_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_PTL_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_NTL_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_NTL_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_TURB_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_TURB_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_MMI_BENT_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_MMI_BENT_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_XCMGW_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_XCMGW_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_XFC_NAT_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_XFC_NAT_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),])#
colnames(fix_fundD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fundD, "//Users/TScott/Google Drive/duckabush/fixef_fund_D.csv")#
#
stargazer(M_PTL_fund0,M_NTL_fund0,M_TURB_fund0,M_MMI_BENT_fund0,M_XCMGW_fund0,M_XFC_NAT_fund0)#
stargazer(M_PTL_fund5,M_NTL_fund5,M_TURB_fund5,M_MMI_BENT_fund5,M_XCMGW_fund5,M_XFC_NAT_fund5)#
stargazer(M_PTL_fund10,M_NTL_fund10,M_TURB_fund10,M_MMI_BENT_fund10,M_XCMGW_fund10,M_XFC_NAT_fund10)#
stargazer(M_PTL_fundD,M_NTL_fundD,M_TURB_fundD,M_MMI_BENT_fundD,M_XCMGW_fundD,M_XFC_NAT_fundD)#
#
write.table(stargazer(M_PTL_fund0,M_NTL_fund0,M_TURB_fund0,M_MMI_BENT_fund0,M_XCMGW_fund0,M_XFC_NAT_fund0),file="//Users/TScott/Google Drive/duckabush/latextable_fund0")#
write.table(stargazer(M_PTL_fund5,M_NTL_fund5,M_TURB_fund5,M_MMI_BENT_fund5,M_XCMGW_fund5,M_XFC_NAT_fund5),file="//Users/TScott/Google Drive/duckabush/latextable_fund5")#
write.table(stargazer(M_PTL_fund10,M_NTL_fund10,M_TURB_fund10,M_MMI_BENT_fund10,M_XCMGW_fund10,M_XFC_NAT_fund10),file="//Users/TScott/Google Drive/duckabush/latextable_fund10")#
write.table(stargazer(M_PTL_fundD,M_NTL_fundD,M_TURB_fundD,M_MMI_BENT_fundD,M_XCMGW_fundD,M_XFC_NAT_fundD),file="//Users/TScott/Google Drive/duckabush/latextable_fundD")
rm(list=ls())#
#
mdat<-data.frame(read.csv("//Users/TScott/Google Drive/duckabush/management_data_v2.csv",header=TRUE))#
for (i in 1:ncol(mdat))#
{#
	mdat[,i]<-tolower(mdat[,i])#
}#
#
edat<-(read.csv("//Users/TScott/Google Drive/duckabush/ready_to_model_dat.csv",header=TRUE))#
for (i in 1:ncol(edat))#
{#
	edat[,i]<-tolower(edat[,i])#
}#
#
t1<-(mdat[mdat$SURVEY=='nrsa',])#
t2<-(mdat[mdat$SURVEY=='wsa',])#
t1<-t1[order(t1$CON_ID),]#
t2<-t2[order(t2$CON_ID),]#
t1[,1:47]<-t2[,1:47]#
#
ttdat<-rbind(t1,t2)#
ttdat$GROUP<-as.numeric(ttdat$GROUP)#
#temp=merge(edat,mdat,by=c("CON_ID","SURVEY","HUC8","FED_OWN","UrbanCat","FW_ECO3","YEAR","FW_ECO9","COUNTY","VISIT_NO",#
#"STATE","MISS_SUB","ECOREPORT","ECO3","STRATUM","MAJ_BAS_NM","STRAHLER","EPAREG","ID","VISIT","FSEASTWEST",#
#"LOC_NAME","WSAREA","XLAT_DD","XLON_DD"),all.x=TRUE)#
temp=merge(edat,ttdat,by=c("CON_ID","SURVEY","YEAR","FW_ECO3","FW_ECO9",'STATE','EPAREG','COUNTY','STRAHLER','ECO3','HUC8','UrbanCat','WSAREA','MAJ_BAS_NM'),all.x=TRUE)#
fdat = temp#
#
#library(MCMCpack)#
library(lme4)#
#library(arm)#
#library(blme)#
library(pbkrtest)#
library(LMERConvenienceFunctions)#
fdat$FED_OWN<-relevel(as.factor(fdat$FED_OWN.y),ref="non federal")#
fdat$SURVEY<-relevel(factor(fdat$SURVEY),ref="wsa")#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_FORM<-ifelse(is.na(fdat$GROUP_FORM)==TRUE,0,fdat$GROUP_FORM)#
#
#IS GROUP ACTIVE0 AT TIME OF SAMPLING?#
#"ACTIVE0_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag0<-fdat$GROUP_FORM+0#
fdat$ACTIVE0_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag0)&fdat$GROUP_FORM_lag0!=0,1,0)#
fdat$ACTIVE0<-fdat$ACTIVE0_GROUP#
#
#IS GROUP ACTIVE5 AT TIME OF SAMPLING?#
#"ACTIVE5_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag5<-fdat$GROUP_FORM+5#
fdat$ACTIVE5_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag5)&fdat$GROUP_FORM_lag5!=5,1,0)#
fdat$ACTIVE5<-fdat$ACTIVE5_GROUP#
#
#IS GROUP ACTIVE10 AT TIME OF SAMPLING?#
#"ACTIVE10_GROUP" IF GROUP PRESENT IN YEAR OF SAMPLING#
fdat$GROUP_FORM_lag10<-fdat$GROUP_FORM+10#
fdat$ACTIVE10_GROUP<-ifelse(fdat$YEAR>=(fdat$GROUP_FORM_lag10)&fdat$GROUP_FORM_lag10!=10,1,0)#
fdat$ACTIVE10<-fdat$ACTIVE10_GROUP#
#
#HOW LONG HAS GROUP BEEN ACTIVE5?#
#"GROUP_DURATION" is number of years group has been active. GROUP_DURATION=1 IF FOUNDED SAME YEAR AS SAMPLE#
#
fdat$YEAR<-as.numeric(fdat$YEAR)#
fdat$GROUP_FORM<-as.numeric(fdat$GROUP_FORM)#
fdat$GROUP_DURATION<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$GROUP_FORM[i]!=0)#
	{#
		fdat$GROUP_DURATION[i] = fdat$YEAR[i] - fdat$GROUP_FORM[i]#
	}#
	else {fdat$GROUP_DURATION[i]=0}#
	fdat$GROUP_DURATION[i]<-ifelse(fdat$GROUP_DURATION[i]<0,0,fdat$GROUP_DURATION[i])#
}#
#
fdat$ACTIVED<-fdat$GROUP_DURATION#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$PTL<-as.numeric(fdat$PTL)#
fdat$NTL<-as.numeric(fdat$NTL)#
fdat$PURB<-as.numeric(fdat$PURB)#
fdat$PURB_std<-as.numeric(fdat$PURB)#
fdat$PFOR<-as.numeric(fdat$PFOR)#
fdat$PWETL<-as.numeric(fdat$PWETL)#
fdat$POPDENS<-as.numeric(fdat$POPDENS)#
fdat$GROUP<-as.numeric(fdat$GROUP)#
fdat$RDDENS<-as.numeric(fdat$RDDENS)#
fdat$XELEV<-as.numeric(fdat$XELEV)#
fdat$W1_HALL<-as.numeric(fdat$W1_HALL)#
fdat$MMI_BENT<-as.numeric(fdat$MMI_BENT)#
fdat$TSS<-as.numeric(fdat$TSS)#
fdat$TURB<-as.numeric(fdat$TURB)#
fdat$HABT_PT<-as.numeric(fdat$HABT_PT)#
#create mean for popdens by major basin to impute for NAs#
MEAN_POPDENS<-tapply(na.omit(as.numeric(fdat$POPDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$POPDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$POPDENS[i])==TRUE){fdat$POPDENS[i] <- MEAN_POPDENS[which(names(MEAN_POPDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent urban land area by major basin to impute for NAs#
MEAN_PURB<-tapply(na.omit(as.numeric(fdat$PURB)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PURB)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PURB[i])==TRUE){fdat$PURB[i] <- MEAN_PURB[which(names(MEAN_PURB)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent forested (PFOR) land area by major basin to impute for NAs#
MEAN_PFOR<-tapply(na.omit(as.numeric(fdat$PFOR)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PFOR)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PFOR[i])==TRUE){fdat$PFOR[i] <- MEAN_PFOR[which(names(MEAN_PFOR)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent wetlands (PWETL) land area by major basin to impute for NAs#
MEAN_PWETL<-tapply(na.omit(as.numeric(fdat$PWETL)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$PWETL)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$PWETL[i])==TRUE){fdat$PWETL[i] <- MEAN_PWETL[which(names(MEAN_PWETL)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for percent road density (RRDENS) by major basin to impute for NAs#
MEAN_RDDENS<-tapply(na.omit(as.numeric(fdat$RDDENS)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$RDDENS)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$RDDENS[i])==TRUE){fdat$RDDENS[i] <- MEAN_RDDENS[which(names(MEAN_RDDENS)==fdat$MAJ_BAS_NM[i])]}}#
#
#create mean for elevation (XELEV) by major basin to impute for NAs#
MEAN_XELEV<-tapply(na.omit(as.numeric(fdat$XELEV)),subset(fdat$MAJ_BAS_NM,!is.na(fdat$XELEV)),mean)#
for (i in 1:nrow(fdat)){if (is.na(fdat$XELEV[i])==TRUE){fdat$XELEV[i] <- MEAN_XELEV[which(names(MEAN_XELEV)==fdat$MAJ_BAS_NM[i])]}}#
#library(devtools); #
#install_github('mrp', 'malecki', sub='mrpdata'); #
#install_github(mrp”, “malecki”, sub=”mrp”)#
#
#REPLACE NA'S IN WATERSHED AREA (A FEW MISSING IN NRSA SET, NOT MISSING IN WSA)#
AREA<-fdat$WSAREA#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$WSAREA[i])==TRUE){AREA[i]<-ifelse(is.na(fdat$LANDAREA[i])==FALSE,fdat$LANDAREA[i],fdat$LANDAREA[fdat$CON_ID==fdat$CON_ID[i]&fdat$SURVEY=='wsa'])}#
}#
fdat$WSAREA<-as.numeric(AREA)#
#MAKE INDICATOR VARIABLES FOR GROUP ACTIVITY/RESPONSIBILITY#
#
#low level collaboration: infundation sharing, coordination, outreach, education#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("coordin",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("outreach",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("education",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_COORD<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("planning",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("monitoring",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else if (length(grep("projects",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
	else {temp[i] = 0}#
}#
fdat$ENGAGED_PLAN<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("management",fdat$ENGAGED_IN[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_MANAG<-temp#
#
temp<-rep(0,length(fdat$CON_ID))#
for (i in 1:length(temp))#
{#
	if (length(grep("advis",fdat$GOVERNANCE_BODY[i])>0)){temp[i]=1}#
		else {temp[i] = 0}#
}#
fdat$ENGAGED_ADVIS<-temp#
#
GROUP_RESPONSIBILITY<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{#
	if (fdat$ENGAGED_MANAG[i]==1){GROUP_RESPONSIBILITY[i]="manage"}#
	else if (fdat$ENGAGED_PLAN[i]==1){GROUP_RESPONSIBILITY[i]="plan"}#
	else if (fdat$ENGAGED_COORD[i]==1){GROUP_RESPONSIBILITY[i]="coord"}#
	else if (fdat$ENGAGED_ADVIS[i]==1){GROUP_RESPONSIBILITY[i]="advis"}#
}#
fdat$GROUP_RESPONSIBILITY<-GROUP_RESPONSIBILITY#
#TRANSfund FUNDING VARIABLE#
FUND_STATE<-rep(0,nrow(fdat))#
FUND_FED<-rep(0,nrow(fdat))#
FUND_LOCAL<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("local",fdat$FUNDING[i]))>0){FUND_LOCAL[i]=1}#
if (length(grep("federal",fdat$FUNDING[i]))>0){FUND_FED[i]=1}#
if (length(grep("state",fdat$FUNDING[i]))>0){FUND_STATE[i]=1}}#
fdat$FUND_STATE<-FUND_STATE#
fdat$FUND_LOCAL<-FUND_LOCAL#
fdat$FUND_FED<-FUND_FED#
#
#TRANSfund GOAL-fundALIZATION VARIABLE#
fund_OBJECT<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{if (length(grep("mission",fdat$OBJECTIVE_SETTING[i]))>0){fund_OBJECT[i]="MISSION"}#
else if (length(grep("goals",fdat$OBJECTIVE_SETTING[i]))>0){fund_OBJECT[i]="GOALS"}#
if (length(grep("objective",fdat$OBJECTIVE_SETTING[i]))>0){fund_OBJECT[i]="OBJECTIVES"}}#
fdat$fund_OBJECT<-fund_OBJECT#
#CLEAN UP COORDINATOR VARIABLE, NAME NEW VARIABLE 'FACILITATE'#
FACILITATE<-rep(0,nrow(fdat))#
for (i in 1:nrow(fdat))#
{FACILITATE[i]<-ifelse(fdat$COORDINATOR[i]=="yes",1,0);FACILITATE[i]<-ifelse(is.na(fdat$COORDINATOR[i])==TRUE,0,FACILITATE[i])}#
fdat$FACILITATE<-FACILITATE#
#
#CLEAN UP INTER-BOUNDARY VARIABLES#
fdat$INTERSTATE<-ifelse(is.na(fdat$INTERSTATE)==TRUE,0,ifelse(fdat$INTERSTATE==1,1,0))#
fdat$INTERNAT<-ifelse(is.na(fdat$INTERNAT)==TRUE,0,ifelse(fdat$INTERNAT==1,1,0))#
fdat$OTHERSTATES<-ifelse(is.na(fdat$OTHERSTATES)==TRUE,0,ifelse(fdat$OTHERSTATES==1,1,0))#
fdat$OTHERNAT<-ifelse(is.na(fdat$OTHERNAT)==TRUE,0,ifelse(fdat$OTHERNAT==1,1,0))#
fdat$TRANS_BOUND<-ifelse(fdat$INTERSTATE==1|fdat$INTERNAT==1,1,0)#
fdat$CROSS_BOUND<-ifelse(fdat$OTHERSTATES==1|fdat$OTHERNAT==1,1,0)#
#
#clean up bylaws existence#
fdat$HAS_BYLAWS<-ifelse(is.na(fdat$BYLAWS)==FALSE&fdat$BYLAWS!="",1,0)#
#clean up and recode for inclusiveness, make MEM_TOTAL variable#
fdat$MEM_TRIBE<-ifelse(is.na(fdat$MEM_TRIBE)==TRUE,0,ifelse(fdat$MEM_TRIBE=="0",0,1))#
fdat$MEM_STAKE<-ifelse(is.na(fdat$MEM_STAKE)==TRUE,0,ifelse(fdat$MEM_STAKE=="0",0,1))#
fdat$MEM_NGO<-ifelse(is.na(fdat$MEM_NGO)==TRUE,0,ifelse(fdat$MEM_NGO=="0",0,1))#
fdat$MEM_STATE<-ifelse(is.na(fdat$MEM_STATE)==TRUE,0,ifelse(fdat$MEM_STATE=="0",0,1))#
fdat$MEM_FED<-ifelse(is.na(fdat$MEM_FED)==TRUE,0,ifelse(fdat$MEM_FED=="0",0,1))#
fdat$MEM_BUS<-ifelse(is.na(fdat$MEM_BUS)==TRUE,0,ifelse(fdat$MEM_BUS=="0",0,1))#
fdat$MEM_AG<-ifelse(is.na(fdat$MEM_AG)==TRUE,0,ifelse(fdat$MEM_AG=="0",0,1))#
fdat$MEM_UNIV<-ifelse(is.na(fdat$MEM_UNIV)==TRUE,0,ifelse(fdat$MEM_UNIV=="0",0,1))#
#
fdat$MEM_TOTAL<-fdat$MEM_TRIBE+fdat$MEM_STAKE+fdat$MEM_NGO+fdat$MEM_STATE+fdat$MEM_FED+fdat$MEM_BUS+fdat$MEM_AG+fdat$MEM_UNIV#
#clean up for tech body presence#
fdat$TECH_BODY<-ifelse(is.na(fdat$TECH_BODY)==TRUE,0,ifelse(fdat$TECH_BODY=="0",0,1))#
#
fdat$GOVERNANCE_BODY<-ifelse(is.na(fdat$GOVERNANCE_BODY)==TRUE,"",fdat$GOVERNANCE_BODY)#
#
for (i in 1:nrow(fdat))#
{#
	if (is.na(fdat$GROUP_FORM[i])==FALSE&fdat$GROUP[i]==1&as.numeric(fdat$GROUP_FORM[i])>=fdat$YEAR[i])#
	{fdat$GOVERNANCE_BODY[i]<-fdat$GOVERNANCE_BODY[i]}#
	else {fdat$GOVERNANCE_BODY[i]<-""}#
}#
#set all huc8 values to 8 digits (add leading 0)#
fdat$HUC8<-ifelse(nchar(fdat$HUC8)==7,paste("0",as.character(fdat$HUC8),sep=""),fdat$HUC8)#
fdat$HUC4<-substr(fdat$HUC8,1,4)#
fdat$HUC6<-substr(fdat$HUC8,1,6)#
fdat$HUC4<-fdat$HUC6#
fdat$XWIDTH<-as.numeric(fdat$XWIDTH)#
fdat$STRAHLER<-as.numeric(fdat$STRAHLER)#
fdat$W1_HAG<-as.numeric(fdat$W1_HAG)#
fdat$W1_HNOAG<-as.numeric(fdat$W1_HNOAG)#
fdat$fund_OBJECT_num<-ifelse(fdat$fund_OBJECT=="0",0,ifelse(fdat$fund_OBJECT=="MISSION",1,ifelse(fdat$fund_OBJECT=="GOALS",2,3)))#
#
#reassign group responsibility, so all samples with NO GROUP and all samples with a group engaged in coordination activites are scored as "coord". This way, when group responsibility is fitted with an interaction term for whether or not a group is active, the effect only "turns on" when there is an active group (so the "NO GROUP" samples assigned a designation of "coord" for Group Responsibility cancel out), allowing the estimated effects to compare either "planning" or "management" to the null of "coordination". This is necessary because all groups engage in some sort of activity, so fitting a term for each type of activity overlaps with the effect of group presence whatsoever#
fdat$GROUP_RESP_null<-ifelse(fdat$GROUP_RESPONSIBILITY=="0","coord",fdat$GROUP_RESPONSIBILITY)#
#standardize each dependent variables so that effects are comparable#
std=function(x){if(length(which(is.na(x)))==0) (x-mean(x))/sd(x) else#
(x-mean(x,na.rm=T))/sd(x,na.rm=T)#
}#
#
fdat$PTL_stz<-std(fdat$PTL)#
fdat$NTL_stz<-std(fdat$NTL)#
fdat$MMI_BENT_stz<-std(fdat$MMI_BENT)#
fdat$TURB_stz<-std(fdat$TURB)#
fdat$XCMGW<-as.numeric(fdat$XCMGW)#
fdat$XCMGW_stz<-std(as.numeric(fdat$XCMGW))#
fdat$XFC_NAT<-as.numeric(fdat$XFC_NAT)#
fdat$XFC_NAT_stz<-std(as.numeric(fdat$XFC_NAT))#
fdat$SQ_MILE<-fdat$WSAREA*0.38610#
library(car)#
fdat$XWIDTH<-log(fdat$XWIDTH+0.001)#
fdat$XELEV<-log(fdat$XELEV+0.001)#
fdat$SQ_MILE<-log(fdat$SQ_MILE+0.001)#
fdat$PURB<-log(fdat$PURB+0.001)#
fdat$PWETL<-log(fdat$PWETL+0.001)#
fdat$PFOR<-log(fdat$PFOR+0.001)#
fdat$POPDENS<-log(fdat$POPDENS+0.001)#
fdat$RDDENS<-log(fdat$RDDENS+0.001)#
fdat$W1_HAG<-log(fdat$W1_HAG+0.001)#
fdat$W1_HNOAG<-log(fdat$W1_HNOAG+0.001)#
fdat$PTL<-log(fdat$PTL+0.001)#
fdat$NTL<-log(fdat$NTL+0.001)#
fdat$TURB<-log(fdat$TURB+0.001)#
fdat$XCMGW<-(fdat$XCMGW^.5)#
fdat$XFC_NAT<-(fdat$XFC_NAT^.5)#
fdat$MMI_BENT<-(fdat$MMI_BENT)#
#
fdat$obj_trans<-ifelse(fdat$fund_OBJECT=="0","MISSION",fdat$fund_OBJECT)#
fdat$obj_trans<-relevel(as.factor(fdat$obj_trans),ref="MISSION")#
#
fdat$GOALS<-ifelse(fdat$obj_trans=="GOALS",1,0)#
fdat$OBJECTIVES<-ifelse(fdat$obj_trans=="OBJECTIVES",1,0)#
#
#UN-RESTRICTED MODELS: GROUP fundALIZATION 0 lag#
M_PTL_fund0 <- lmer(PTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fund0<-summary(M_PTL_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fund0)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fund_0.csv")#
#
M_NTL_fund0 <- lmer(NTL~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fund0<-summary(M_NTL_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fund0)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fund_0.csv")#
#
M_TURB_fund0 <- lmer(TURB~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fund0<-summary(M_TURB_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fund0)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fund_0.csv")#
#
M_XFC_NAT_fund0 <- lmer(XFC_NAT~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fund0<-summary(M_XFC_NAT_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fund0)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fund_0.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fund0 <- lmer(MMI_BENT~ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fund0<-summary(M_MMI_BENT_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fund0)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fund_0.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fund0 <- lmer(XCMGW~ ACTIVE0+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE0:FUND_LOCAL+#
ACTIVE0:FUND_STATE+#
ACTIVE0:FUND_FED+#
(1|HUC4)+(ACTIVE0|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fund0<-summary(M_XCMGW_fund0,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fund0)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fund_0.csv")#
#
#make csv file that is table of fixed effects from fund0 models#
fix_fund0<-cbind(modsum_PTL_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_PTL_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_NTL_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_NTL_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_TURB_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_TURB_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_MMI_BENT_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_MMI_BENT_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_XCMGW_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_XCMGW_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),],#
modsum_XFC_NAT_fund0$coef[c(-grep("YEAR",rownames(modsum_NTL_fund0$coef)),-grep("Intercept",rownames(modsum_NTL_fund0$coef))),],#
car::Anova(M_XFC_NAT_fund0)[-grep("YEAR",rownames(car::Anova(M_NTL_fund0))),])#
colnames(fix_fund0)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fund0, "//Users/TScott/Google Drive/duckabush/fixef_fund_0.csv")#
#UN-RESTRICTED MODELS: GROUP RESPONSIBILITY 5 lag#
M_PTL_fund5 <- lmer(PTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fund5<-summary(M_PTL_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fund5)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fund_5.csv")#
#
M_NTL_fund5 <- lmer(NTL~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fund5<-summary(M_NTL_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fund5)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fund_5.csv")#
#
M_TURB_fund5 <- lmer(TURB~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fund5<-summary(M_TURB_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fund5)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fund_5.csv")#
#
M_XFC_NAT_fund5 <- lmer(XFC_NAT~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fund5<-summary(M_XFC_NAT_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fund5)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fund_5.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fund5 <- lmer(MMI_BENT~ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fund5<-summary(M_MMI_BENT_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fund5)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fund_5.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fund5 <- lmer(XCMGW~ ACTIVE5+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE5:FUND_LOCAL+#
ACTIVE5:FUND_STATE+#
ACTIVE5:FUND_FED+#
(1|HUC4)+(ACTIVE5|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fund5<-summary(M_XCMGW_fund5,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fund5)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fund_5.csv")#
#
#make csv file that is table of fixed effects from fund5 models#
fix_fund5<-cbind(modsum_PTL_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_PTL_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_NTL_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_NTL_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_TURB_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_TURB_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_MMI_BENT_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_MMI_BENT_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_XCMGW_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_XCMGW_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),],#
modsum_XFC_NAT_fund5$coef[c(-grep("YEAR",rownames(modsum_NTL_fund5$coef)),-grep("Intercept",rownames(modsum_NTL_fund5$coef))),],#
car::Anova(M_XFC_NAT_fund5)[-grep("YEAR",rownames(car::Anova(M_NTL_fund5))),])#
colnames(fix_fund5)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fund5, "//Users/TScott/Google Drive/duckabush/fixef_fund_5.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY 10 lag#
#
M_PTL_fund10 <- lmer(PTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fund10<-summary(M_PTL_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fund10)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fund_10.csv")#
#
M_NTL_fund10 <- lmer(NTL~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fund10<-summary(M_NTL_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fund10)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fund_10.csv")#
#
M_TURB_fund10 <- lmer(TURB~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fund10<-summary(M_TURB_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fund10)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fund_10.csv")#
#
M_XFC_NAT_fund10 <- lmer(XFC_NAT~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fund10<-summary(M_XFC_NAT_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fund10)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fund_10.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fund10 <- lmer(MMI_BENT~ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fund10<-summary(M_MMI_BENT_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fund10)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fund_10.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fund10 <- lmer(XCMGW~ ACTIVE10+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVE10:FUND_LOCAL+#
ACTIVE10:FUND_STATE+#
ACTIVE10:FUND_FED+#
(1|HUC4)+(ACTIVE10|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fund10<-summary(M_XCMGW_fund10,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fund10)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fund_10.csv")#
#
#make csv file that is table of fixed effects from fund10 models#
fix_fund10<-cbind(modsum_PTL_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_PTL_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_NTL_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_NTL_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_TURB_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_TURB_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_MMI_BENT_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_MMI_BENT_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_XCMGW_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_XCMGW_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),],#
modsum_XFC_NAT_fund10$coef[c(-grep("YEAR",rownames(modsum_NTL_fund10$coef)),-grep("Intercept",rownames(modsum_NTL_fund10$coef))),],#
car::Anova(M_XFC_NAT_fund10)[-grep("YEAR",rownames(car::Anova(M_NTL_fund10))),])#
colnames(fix_fund10)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fund10, "//Users/TScott/Google Drive/duckabush/fixef_fund_10.csv")#
#UN-RESTRICTED MODELS: RESPONSIBILITY Duration#
M_PTL_fundD <- lmer(PTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_PTL_fundD<-summary(M_PTL_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_PTL_fundD)[2], "//Users/TScott/Google Drive/duckabush/ptl_ranef_fund_D.csv")#
#
M_NTL_fundD <- lmer(NTL~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_NTL_fundD<-summary(M_NTL_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_NTL_fundD)[2], "//Users/TScott/Google Drive/duckabush/ntl_ranef_fund_D.csv")#
#
M_TURB_fundD <- lmer(TURB~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_TURB_fundD<-summary(M_TURB_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_TURB_fundD)[2], "//Users/TScott/Google Drive/duckabush/turb_ranef_fund_D.csv")#
#
M_XFC_NAT_fundD <- lmer(XFC_NAT~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat)#
modsum_XFC_NAT_fundD<-summary(M_XFC_NAT_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XFC_NAT_fundD)[2], "//Users/TScott/Google Drive/duckabush/xfc_ranef_fund_D.csv")#
#
fdat_MMI_BENT<-subset(fdat,is.na(fdat$MMI_BENT)==FALSE)#
M_MMI_BENT_fundD <- lmer(MMI_BENT~ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_MMI_BENT)#
modsum_MMI_BENT_fundD<-summary(M_MMI_BENT_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_MMI_BENT_fundD)[2], "//Users/TScott/Google Drive/duckabush/mmi_ranef_fund_D.csv")#
#
fdat_XCMGW<-subset(fdat,is.na(fdat$XCMGW)==FALSE)#
M_XCMGW_fundD <- lmer(XCMGW~ ACTIVED+as.factor(YEAR)+XWIDTH+XELEV+SQ_MILE+STRAHLER+PURB+PWETL+PFOR+RDDENS+POPDENS+W1_HAG+W1_HNOAG+#
ACTIVED:FUND_LOCAL+#
ACTIVED:FUND_STATE+#
ACTIVED:FUND_FED+#
(1|HUC4)+(ACTIVED|STATE),verbose=TRUE,data=fdat_XCMGW)#
modsum_XCMGW_fundD<-summary(M_XCMGW_fundD,signature=signature(object = "merModLmerTest"))#
write.csv(ranef(M_XCMGW_fundD)[2], "//Users/TScott/Google Drive/duckabush/xcmgw_ranef_fund_D.csv")#
#
#make csv file that is table of fixed effects from fundD models#
fix_fundD<-cbind(modsum_PTL_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_PTL_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_NTL_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_NTL_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_TURB_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_TURB_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_MMI_BENT_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_MMI_BENT_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_XCMGW_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_XCMGW_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),],#
modsum_XFC_NAT_fundD$coef[c(-grep("YEAR",rownames(modsum_NTL_fundD$coef)),-grep("Intercept",rownames(modsum_NTL_fundD$coef))),],#
car::Anova(M_XFC_NAT_fundD)[-grep("YEAR",rownames(car::Anova(M_NTL_fundD))),])#
colnames(fix_fundD)<-c("PTL","p","NTL",'p','TURB','p','MMI_BENT','p','XCMGW','p','XFC_NAT','p')#
write.csv(fix_fundD, "//Users/TScott/Google Drive/duckabush/fixef_fund_D.csv")#
#
stargazer(M_PTL_fund0,M_NTL_fund0,M_TURB_fund0,M_MMI_BENT_fund0,M_XCMGW_fund0,M_XFC_NAT_fund0)#
stargazer(M_PTL_fund5,M_NTL_fund5,M_TURB_fund5,M_MMI_BENT_fund5,M_XCMGW_fund5,M_XFC_NAT_fund5)#
stargazer(M_PTL_fund10,M_NTL_fund10,M_TURB_fund10,M_MMI_BENT_fund10,M_XCMGW_fund10,M_XFC_NAT_fund10)#
stargazer(M_PTL_fundD,M_NTL_fundD,M_TURB_fundD,M_MMI_BENT_fundD,M_XCMGW_fundD,M_XFC_NAT_fundD)#
#
write.table(stargazer(M_PTL_fund0,M_NTL_fund0,M_TURB_fund0,M_MMI_BENT_fund0,M_XCMGW_fund0,M_XFC_NAT_fund0),file="//Users/TScott/Google Drive/duckabush/latextable_fund0")#
write.table(stargazer(M_PTL_fund5,M_NTL_fund5,M_TURB_fund5,M_MMI_BENT_fund5,M_XCMGW_fund5,M_XFC_NAT_fund5),file="//Users/TScott/Google Drive/duckabush/latextable_fund5")#
write.table(stargazer(M_PTL_fund10,M_NTL_fund10,M_TURB_fund10,M_MMI_BENT_fund10,M_XCMGW_fund10,M_XFC_NAT_fund10),file="//Users/TScott/Google Drive/duckabush/latextable_fund10")#
write.table(stargazer(M_PTL_fundD,M_NTL_fundD,M_TURB_fundD,M_MMI_BENT_fundD,M_XCMGW_fundD,M_XFC_NAT_fundD),file="//Users/TScott/Google Drive/duckabush/latextable_fundD")
rm(list=ls())
ls()
stargazer(mod1,mod2,mod3,mod4)
summary(mod1)
library(statnet)
summary(mod1)
stargazer(mod1,mod2,mod3,mod4)
summary(mod1)
summary(mod0)
mod0<-logLik(mod0, add=TRUE)
stargazer(mod0,mod1,mod2,mod3,mod4)
library(statnet)
stargazer(mod0,mod1,mod2,mod3,mod4)
mod0
summary(mod0)
stargazer(mod1,mod2,mod3,mod4)
nonzero.sim
ls()
